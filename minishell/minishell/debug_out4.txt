[main]	level set to 1
[main]	duplicated stdin to 4
[main]	duplicated stdout to 5
[main]	started
[main]	agrc = 1
[main]	agrv[1] = (null)
[main]	
[main]	-----------------------
[main]	process command: '"setenv" | "sort"'
[main]	quote replaced: 'setenv' -> '%paired_quote%1'
[main]	quote replaced: 'sort' -> '%paired_quote%2'
[main]	quotes replaced: '%paired_quote%1 | %paired_quote%2'
[main]	trimmed = %paired_quote%1 | %paired_quote%2
[main]	no comments = %paired_quote%1 | %paired_quote%2
[main]	cmd: '%paired_quote%1 | %paired_quote%2'
[main]	pipe_parse(%paired_quote%1 | %paired_quote%2)
[main]	cmd[0] = '%paired_quote%1 '
[%paired_quote%1 | %paired_quote%2]	new pipe: r=6, w=7
[%paired_quote%1 | %paired_quote%2]	exec 0 > %paired_quote%1 > 7
[%paired_quote%1 | %paired_quote%2]	restore stdin
[%paired_quote%1 | %paired_quote%2]	redirect: 0->4
[%paired_quote%1 | %paired_quote%2]	restore stdout
[%paired_quote%1 | %paired_quote%2]	redirect: 1->5
[%paired_quote%1 | %paired_quote%2]	redirect: 0->0
[%paired_quote%1 | %paired_quote%2]	redirect: 1->7
[%paired_quote%1 | %paired_quote%2]	after replace
'setenv'	
[%paired_quote%1 | %paired_quote%2]	close(7)
[%paired_quote%1 | %paired_quote%2]	exec 6 > %paired_quote%2 > 1
[%paired_quote%1 | %paired_quote%2]	restore stdin
[%paired_quote%1 | %paired_quote%2]	redirect: 0->4
[%paired_quote%1 | %paired_quote%2]	restore stdout
[%paired_quote%1 | %paired_quote%2]	redirect: 1->5
[%paired_quote%1 | %paired_quote%2]	redirect: 0->6
[%paired_quote%1 | %paired_quote%2]	redirect: 1->1
[%paired_quote%1 | %paired_quote%2]	after replace
'sort'	
[%paired_quote%1 | %paired_quote%2]	fork
[%paired_quote%1 | %paired_quote%2]	fork_and_exec:	/usr/bin/sort = 10597 launched
[%paired_quote%1 | %paired_quote%2]	pipe_exec2 returned: 10597
[%paired_quote%1 | %paired_quote%2]	free item: '%paired_quote%1' (0x5237d80)
[%paired_quote%1 | %paired_quote%2]	free item: '%paired_quote%2' (0x5237e30)
[%paired_quote%1 | %paired_quote%2]	waiting %paired_quote%1 | %paired_quote%2 to finish
[%paired_quote%1 | %paired_quote%2]	change g_awaited_process from 0 to 10597
[%paired_quote%1 | %paired_quote%2]	wait 10597 to stop
 [/usr/bin/sort]	close_g_fd_to_close [/usr/bin/sort]	close(6)
 [/usr/bin/sort]	fork_and_exec:	about to launch /usr/bin/sort
 [/usr/bin/sort]	exec(/usr/bin/sort)
[%paired_quote%1 | %paired_quote%2]	waitpid(10597) returned
[%paired_quote%1 | %paired_quote%2]	%paired_quote%1 | %paired_quote%2 finished
[%paired_quote%1 | %paired_quote%2]	change g_awaited_process from 10597 to 0
[%paired_quote%1 | %paired_quote%2]	command processed: '"setenv" | "sort"'
[%paired_quote%1 | %paired_quote%2]	-------------------------
[%paired_quote%1 | %paired_quote%2]	
[%paired_quote%1 | %paired_quote%2]	
[%paired_quote%1 | %paired_quote%2]	-----------------------
[%paired_quote%1 | %paired_quote%2]	process command: '"setenv" | "sort"'
[%paired_quote%1 | %paired_quote%2]	quote replaced: 'setenv' -> '%paired_quote%1'
[%paired_quote%1 | %paired_quote%2]	quote replaced: 'sort' -> '%paired_quote%2'
[%paired_quote%1 | %paired_quote%2]	quotes replaced: '%paired_quote%1 | %paired_quote%2'
[%paired_quote%1 | %paired_quote%2]	trimmed = %paired_quote%1 | %paired_quote%2
[%paired_quote%1 | %paired_quote%2]	no comments = %paired_quote%1 | %paired_quote%2
[%paired_quote%1 | %paired_quote%2]	cmd: '%paired_quote%1 | %paired_quote%2'
[%paired_quote%1 | %paired_quote%2]	pipe_parse(%paired_quote%1 | %paired_quote%2)
[%paired_quote%1 | %paired_quote%2]	cmd[0] = '%paired_quote%1 '
[%paired_quote%1 | %paired_quote%2]	new pipe: r=7, w=8
[%paired_quote%1 | %paired_quote%2]	exec 0 > %paired_quote%1 > 8
[%paired_quote%1 | %paired_quote%2]	restore stdin
[%paired_quote%1 | %paired_quote%2]	redirect: 0->4
[%paired_quote%1 | %paired_quote%2]	restore stdout
[%paired_quote%1 | %paired_quote%2]	redirect: 1->5
[%paired_quote%1 | %paired_quote%2]	redirect: 0->0
[%paired_quote%1 | %paired_quote%2]	redirect: 1->8
[%paired_quote%1 | %paired_quote%2]	after replace
'setenv'	
[%paired_quote%1 | %paired_quote%2]	close(8)
[%paired_quote%1 | %paired_quote%2]	exec 7 > %paired_quote%2 > 1
[%paired_quote%1 | %paired_quote%2]	restore stdin
[%paired_quote%1 | %paired_quote%2]	redirect: 0->4
[%paired_quote%1 | %paired_quote%2]	restore stdout
[%paired_quote%1 | %paired_quote%2]	redirect: 1->5
[%paired_quote%1 | %paired_quote%2]	redirect: 0->7
[%paired_quote%1 | %paired_quote%2]	redirect: 1->1
[%paired_quote%1 | %paired_quote%2]	after replace
'sort'	
[%paired_quote%1 | %paired_quote%2]	fork
[%paired_quote%1 | %paired_quote%2]	fork_and_exec:	/usr/bin/sort = 10598 launched
[%paired_quote%1 | %paired_quote%2]	pipe_exec2 returned: 10598
[%paired_quote%1 | %paired_quote%2]	free item: '%paired_quote%1' (0x523afc0)
[%paired_quote%1 | %paired_quote%2]	free item: '%paired_quote%2' (0x523b070)
[%paired_quote%1 | %paired_quote%2]	waiting %paired_quote%1 | %paired_quote%2 to finish
[%paired_quote%1 | %paired_quote%2]	change g_awaited_process from 0 to 10598
[%paired_quote%1 | %paired_quote%2]	wait 10598 to stop
  [/usr/bin/sort]	close_g_fd_to_close  [/usr/bin/sort]	close(7)
  [/usr/bin/sort]	fork_and_exec:	about to launch /usr/bin/sort
  [/usr/bin/sort]	exec(/usr/bin/sort)
[%paired_quote%1 | %paired_quote%2]	waitpid(10598) returned
[%paired_quote%1 | %paired_quote%2]	%paired_quote%1 | %paired_quote%2 finished
[%paired_quote%1 | %paired_quote%2]	change g_awaited_process from 10598 to 0
[%paired_quote%1 | %paired_quote%2]	command processed: '"setenv" | "sort"'
[%paired_quote%1 | %paired_quote%2]	-------------------------
[%paired_quote%1 | %paired_quote%2]	
[%paired_quote%1 | %paired_quote%2]	
[%paired_quote%1 | %paired_quote%2]	-----------------------
[%paired_quote%1 | %paired_quote%2]	process command: 'ls | sort'
[%paired_quote%1 | %paired_quote%2]	quotes replaced: 'ls | sort'
[%paired_quote%1 | %paired_quote%2]	trimmed = ls | sort
[%paired_quote%1 | %paired_quote%2]	no comments = ls | sort
[%paired_quote%1 | %paired_quote%2]	cmd: 'ls | sort'
[%paired_quote%1 | %paired_quote%2]	pipe_parse(ls | sort)
[%paired_quote%1 | %paired_quote%2]	cmd[0] = 'ls '
[ls | sort]	new pipe: r=8, w=9
[ls | sort]	exec 0 > ls > 9
[ls | sort]	restore stdin
[ls | sort]	redirect: 0->4
[ls | sort]	restore stdout
[ls | sort]	redirect: 1->5
[ls | sort]	redirect: 0->0
[ls | sort]	redirect: 1->9
[ls | sort]	after replace
'ls'	
[ls | sort]	fork
[ls | sort]	fork_and_exec:	/bin/ls = 10599 launched
[ls | sort]	close(9)
[ls | sort]	exec 8 > sort > 1
[ls | sort]	restore stdin
[ls | sort]	redirect: 0->4
[ls | sort]	restore stdout
[ls | sort]	redirect: 1->5
[ls | sort]	redirect: 0->8
[ls | sort]	redirect: 1->1
[ls | sort]	after replace
'sort'	
[ls | sort]	fork
   [/bin/ls]	close_g_fd_to_close   [/bin/ls]	close(8)
   [/bin/ls]	fork_and_exec:	about to launch /bin/ls
   [/bin/ls]	exec(/bin/ls)
[ls | sort]	fork_and_exec:	/usr/bin/sort = 10600 launched
[ls | sort]	pipe_exec2 returned: 10600
[ls | sort]	free item: 'ls' (0x523dde0)
[ls | sort]	free item: 'sort' (0x523de90)
[ls | sort]	waiting ls | sort to finish
[ls | sort]	change g_awaited_process from 0 to 10600
[ls | sort]	wait 10600 to stop
    [/usr/bin/sort]	close_g_fd_to_close    [/usr/bin/sort]	close(8)
    [/usr/bin/sort]	fork_and_exec:	about to launch /usr/bin/sort
    [/usr/bin/sort]	exec(/usr/bin/sort)
[ls | sort]	waitpid(10600) returned
[ls | sort]	ls | sort finished
[ls | sort]	change g_awaited_process from 10600 to 0
[ls | sort]	command processed: 'ls | sort'
[ls | sort]	-------------------------
[ls | sort]	
[ls | sort]	
[ls | sort]	-----------------------
[ls | sort]	process command: 'ls | cat -e'
[ls | sort]	quotes replaced: 'ls | cat -e'
[ls | sort]	trimmed = ls | cat -e
[ls | sort]	no comments = ls | cat -e
[ls | sort]	cmd: 'ls | cat -e'
[ls | sort]	pipe_parse(ls | cat -e)
[ls | sort]	cmd[0] = 'ls '
[ls | cat -e]	new pipe: r=9, w=10
[ls | cat -e]	exec 0 > ls > 10
[ls | cat -e]	restore stdin
[ls | cat -e]	redirect: 0->4
[ls | cat -e]	restore stdout
[ls | cat -e]	redirect: 1->5
[ls | cat -e]	redirect: 0->0
[ls | cat -e]	redirect: 1->10
[ls | cat -e]	after replace
'ls'	
[ls | cat -e]	fork
[ls | cat -e]	fork_and_exec:	/bin/ls = 10601 launched
[ls | cat -e]	close(10)
[ls | cat -e]	exec 9 > cat -e > 1
[ls | cat -e]	restore stdin
[ls | cat -e]	redirect: 0->4
[ls | cat -e]	restore stdout
[ls | cat -e]	redirect: 1->5
[ls | cat -e]	redirect: 0->9
[ls | cat -e]	redirect: 1->1
[ls | cat -e]	after replace
'cat'	'-e'	
[ls | cat -e]	fork
     [/bin/ls]	close_g_fd_to_close     [/bin/ls]	close(9)
     [/bin/ls]	fork_and_exec:	about to launch /bin/ls
     [/bin/ls]	exec(/bin/ls)
[ls | cat -e]	fork_and_exec:	/bin/cat = 10602 launched
[ls | cat -e]	pipe_exec2 returned: 10602
[ls | cat -e]	free item: 'ls' (0x5242e10)
[ls | cat -e]	free item: 'cat -e' (0x5242ec0)
[ls | cat -e]	waiting ls | cat -e to finish
[ls | cat -e]	change g_awaited_process from 0 to 10602
[ls | cat -e]	wait 10602 to stop
      [/bin/cat]	close_g_fd_to_close      [/bin/cat]	close(9)
      [/bin/cat]	fork_and_exec:	about to launch /bin/cat
      [/bin/cat]	exec(/bin/cat)
[ls | cat -e]	waitpid(10602) returned
[ls | cat -e]	ls | cat -e finished
[ls | cat -e]	change g_awaited_process from 10602 to 0
[ls | cat -e]	command processed: 'ls | cat -e'
[ls | cat -e]	-------------------------
[ls | cat -e]	
[ls | cat -e]	
[ls | cat -e]	-----------------------
[ls | cat -e]	process command: 'ls | sort | cat -e'
[ls | cat -e]	quotes replaced: 'ls | sort | cat -e'
[ls | cat -e]	trimmed = ls | sort | cat -e
[ls | cat -e]	no comments = ls | sort | cat -e
[ls | cat -e]	cmd: 'ls | sort | cat -e'
[ls | cat -e]	pipe_parse(ls | sort | cat -e)
[ls | cat -e]	cmd[0] = 'ls '
[ls | sort | cat -e]	new pipe: r=10, w=11
[ls | sort | cat -e]	exec 0 > ls > 11
[ls | sort | cat -e]	restore stdin
[ls | sort | cat -e]	redirect: 0->4
[ls | sort | cat -e]	restore stdout
[ls | sort | cat -e]	redirect: 1->5
[ls | sort | cat -e]	redirect: 0->0
[ls | sort | cat -e]	redirect: 1->11
[ls | sort | cat -e]	after replace
'ls'	
[ls | sort | cat -e]	fork
[ls | sort | cat -e]	fork_and_exec:	/bin/ls = 10603 launched
[ls | sort | cat -e]	close(11)
[ls | sort | cat -e]	new pipe: r=11, w=12
[ls | sort | cat -e]	exec 10 > sort > 12
[ls | sort | cat -e]	restore stdin
[ls | sort | cat -e]	redirect: 0->4
[ls | sort | cat -e]	restore stdout
[ls | sort | cat -e]	redirect: 1->5
[ls | sort | cat -e]	redirect: 0->10
[ls | sort | cat -e]	redirect: 1->12
[ls | sort | cat -e]	after replace
'sort'	
[ls | sort | cat -e]	fork
       [/bin/ls]	close_g_fd_to_close       [/bin/ls]	close(10)
       [/bin/ls]	fork_and_exec:	about to launch /bin/ls
       [/bin/ls]	exec(/bin/ls)
[ls | sort | cat -e]	fork_and_exec:	/usr/bin/sort = 10604 launched
[ls | sort | cat -e]	close(12)
[ls | sort | cat -e]	exec 11 > cat -e > 1
[ls | sort | cat -e]	restore stdin
[ls | sort | cat -e]	redirect: 0->4
[ls | sort | cat -e]	restore stdout
[ls | sort | cat -e]	redirect: 1->5
[ls | sort | cat -e]	redirect: 0->11
[ls | sort | cat -e]	redirect: 1->1
[ls | sort | cat -e]	after replace
'cat'	'-e'	
[ls | sort | cat -e]	fork
        [/usr/bin/sort]	close_g_fd_to_close        [/usr/bin/sort]	close(11)
        [/usr/bin/sort]	fork_and_exec:	about to launch /usr/bin/sort
        [/usr/bin/sort]	exec(/usr/bin/sort)
[ls | sort | cat -e]	fork_and_exec:	/bin/cat = 10605 launched
[ls | sort | cat -e]	pipe_exec2 returned: 10605
[ls | sort | cat -e]	free item: 'ls' (0x5247ff0)
[ls | sort | cat -e]	free item: 'sort' (0x52480a0)
[ls | sort | cat -e]	free item: 'cat -e' (0x5248150)
[ls | sort | cat -e]	waiting ls | sort | cat -e to finish
[ls | sort | cat -e]	change g_awaited_process from 0 to 10605
[ls | sort | cat -e]	wait 10605 to stop
         [/bin/cat]	close_g_fd_to_close         [/bin/cat]	close(11)
         [/bin/cat]	fork_and_exec:	about to launch /bin/cat
         [/bin/cat]	exec(/bin/cat)
[ls | sort | cat -e]	waitpid(10605) returned
[ls | sort | cat -e]	ls | sort | cat -e finished
[ls | sort | cat -e]	change g_awaited_process from 10605 to 0
[ls | sort | cat -e]	command processed: 'ls | sort | cat -e'
[ls | sort | cat -e]	-------------------------
[ls | sort | cat -e]	
[ls | sort | cat -e]	
[ls | sort | cat -e]	-----------------------
[ls | sort | cat -e]	process command: 'ls | cat -e | sort'
[ls | sort | cat -e]	quotes replaced: 'ls | cat -e | sort'
[ls | sort | cat -e]	trimmed = ls | cat -e | sort
[ls | sort | cat -e]	no comments = ls | cat -e | sort
[ls | sort | cat -e]	cmd: 'ls | cat -e | sort'
[ls | sort | cat -e]	pipe_parse(ls | cat -e | sort)
[ls | sort | cat -e]	cmd[0] = 'ls '
[ls | cat -e | sort]	new pipe: r=12, w=13
[ls | cat -e | sort]	exec 0 > ls > 13
[ls | cat -e | sort]	restore stdin
[ls | cat -e | sort]	redirect: 0->4
[ls | cat -e | sort]	restore stdout
[ls | cat -e | sort]	redirect: 1->5
[ls | cat -e | sort]	redirect: 0->0
[ls | cat -e | sort]	redirect: 1->13
[ls | cat -e | sort]	after replace
'ls'	
[ls | cat -e | sort]	fork
[ls | cat -e | sort]	fork_and_exec:	/bin/ls = 10606 launched
[ls | cat -e | sort]	close(13)
[ls | cat -e | sort]	new pipe: r=13, w=14
[ls | cat -e | sort]	exec 12 > cat -e > 14
[ls | cat -e | sort]	restore stdin
[ls | cat -e | sort]	redirect: 0->4
[ls | cat -e | sort]	restore stdout
[ls | cat -e | sort]	redirect: 1->5
[ls | cat -e | sort]	redirect: 0->12
[ls | cat -e | sort]	redirect: 1->14
[ls | cat -e | sort]	after replace
'cat'	'-e'	
[ls | cat -e | sort]	fork
          [/bin/ls]	close_g_fd_to_close          [/bin/ls]	close(12)
          [/bin/ls]	fork_and_exec:	about to launch /bin/ls
          [/bin/ls]	exec(/bin/ls)
[ls | cat -e | sort]	fork_and_exec:	/bin/cat = 10607 launched
[ls | cat -e | sort]	close(14)
[ls | cat -e | sort]	exec 13 > sort > 1
[ls | cat -e | sort]	restore stdin
[ls | cat -e | sort]	redirect: 0->4
[ls | cat -e | sort]	restore stdout
[ls | cat -e | sort]	redirect: 1->5
[ls | cat -e | sort]	redirect: 0->13
[ls | cat -e | sort]	redirect: 1->1
[ls | cat -e | sort]	after replace
'sort'	
[ls | cat -e | sort]	fork
           [/bin/cat]	close_g_fd_to_close           [/bin/cat]	close(13)
           [/bin/cat]	fork_and_exec:	about to launch /bin/cat
           [/bin/cat]	exec(/bin/cat)
[ls | cat -e | sort]	fork_and_exec:	/usr/bin/sort = 10608 launched
[ls | cat -e | sort]	pipe_exec2 returned: 10608
[ls | cat -e | sort]	free item: 'ls' (0x524f870)
[ls | cat -e | sort]	free item: 'cat -e' (0x524f920)
[ls | cat -e | sort]	free item: 'sort' (0x524f9d0)
[ls | cat -e | sort]	waiting ls | cat -e | sort to finish
[ls | cat -e | sort]	change g_awaited_process from 0 to 10608
[ls | cat -e | sort]	wait 10608 to stop
            [/usr/bin/sort]	close_g_fd_to_close            [/usr/bin/sort]	close(13)
            [/usr/bin/sort]	fork_and_exec:	about to launch /usr/bin/sort
            [/usr/bin/sort]	exec(/usr/bin/sort)
[ls | cat -e | sort]	waitpid(10608) returned
[ls | cat -e | sort]	ls | cat -e | sort finished
[ls | cat -e | sort]	change g_awaited_process from 10608 to 0
[ls | cat -e | sort]	command processed: 'ls | cat -e | sort'
[ls | cat -e | sort]	-------------------------
[ls | cat -e | sort]	
[ls | cat -e | sort]	
[ls | cat -e | sort]	-----------------------
[ls | cat -e | sort]	process command: 'setenv | sort'
[ls | cat -e | sort]	quotes replaced: 'setenv | sort'
[ls | cat -e | sort]	trimmed = setenv | sort
[ls | cat -e | sort]	no comments = setenv | sort
[ls | cat -e | sort]	cmd: 'setenv | sort'
[ls | cat -e | sort]	pipe_parse(setenv | sort)
[ls | cat -e | sort]	cmd[0] = 'setenv '
[setenv | sort]	new pipe: r=14, w=15
[setenv | sort]	exec 0 > setenv > 15
[setenv | sort]	restore stdin
[setenv | sort]	redirect: 0->4
[setenv | sort]	restore stdout
[setenv | sort]	redirect: 1->5
[setenv | sort]	redirect: 0->0
[setenv | sort]	redirect: 1->15
[setenv | sort]	after replace
'setenv'	
[setenv | sort]	close(15)
[setenv | sort]	exec 14 > sort > 1
[setenv | sort]	restore stdin
[setenv | sort]	redirect: 0->4
[setenv | sort]	restore stdout
[setenv | sort]	redirect: 1->5
[setenv | sort]	redirect: 0->14
[setenv | sort]	redirect: 1->1
[setenv | sort]	after replace
'sort'	
[setenv | sort]	fork
[setenv | sort]	fork_and_exec:	/usr/bin/sort = 10609 launched
[setenv | sort]	pipe_exec2 returned: 10609
[setenv | sort]	free item: 'setenv' (0x5257040)
[setenv | sort]	free item: 'sort' (0x52570f0)
[setenv | sort]	waiting setenv | sort to finish
[setenv | sort]	change g_awaited_process from 0 to 10609
[setenv | sort]	wait 10609 to stop
             [/usr/bin/sort]	close_g_fd_to_close             [/usr/bin/sort]	close(14)
             [/usr/bin/sort]	fork_and_exec:	about to launch /usr/bin/sort
             [/usr/bin/sort]	exec(/usr/bin/sort)
[setenv | sort]	waitpid(10609) returned
[setenv | sort]	setenv | sort finished
[setenv | sort]	change g_awaited_process from 10609 to 0
[setenv | sort]	command processed: 'setenv | sort'
[setenv | sort]	-------------------------
[setenv | sort]	
[setenv | sort]	
[setenv | sort]	-----------------------
[setenv | sort]	process command: 'base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e "s/1/Yes/g" -e "s/0/No/g"'
[setenv | sort]	quote replaced: 's/1/Yes/g' -> '%paired_quote%1'
[setenv | sort]	quote replaced: 's/0/No/g' -> '%paired_quote%2'
[setenv | sort]	quotes replaced: 'base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2'
[setenv | sort]	trimmed = base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2
[setenv | sort]	no comments = base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2
[setenv | sort]	cmd: 'base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2'
[setenv | sort]	pipe_parse(base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2)
[setenv | sort]	cmd[0] = 'base64 /dev/urandom '
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	new pipe: r=15, w=16
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	exec 0 > base64 /dev/urandom > 16
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdin
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->4
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdout
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->5
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->0
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->16
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	after replace
'base64'	'/dev/urandom'	
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork_and_exec:	/usr/bin/base64 = 10610 launched
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	close(16)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	new pipe: r=16, w=17
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	exec 15 > head -c100 > 17
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdin
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->4
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdout
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->5
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->15
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->17
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	after replace
'head'	'-c100'	
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork
              [/usr/bin/base64]	close_g_fd_to_close              [/usr/bin/base64]	close(15)
              [/usr/bin/base64]	fork_and_exec:	about to launch /usr/bin/base64
              [/usr/bin/base64]	exec(/usr/bin/base64)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork_and_exec:	/usr/bin/head = 10611 launched
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	close(17)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	new pipe: r=17, w=18
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	exec 16 > grep 42 > 18
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdin
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->4
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdout
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->5
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->16
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->18
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	after replace
'grep'	'42'	
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork
               [/usr/bin/head]	close_g_fd_to_close               [/usr/bin/head]	close(16)
               [/usr/bin/head]	fork_and_exec:	about to launch /usr/bin/head
               [/usr/bin/head]	exec(/usr/bin/head)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork_and_exec:	/bin/grep = 10612 launched
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	close(18)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	new pipe: r=18, w=19
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	exec 17 > wc -l > 19
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdin
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->4
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdout
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->5
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->17
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->19
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	after replace
'wc'	'-l'	
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork
                [/bin/grep]	close_g_fd_to_close                [/bin/grep]	close(17)
                [/bin/grep]	fork_and_exec:	about to launch /bin/grep
                [/bin/grep]	exec(/bin/grep)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork_and_exec:	/usr/bin/wc = 10613 launched
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	close(19)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	exec 18 > sed -e %paired_quote%1 -e %paired_quote%2 > 1
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdin
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->4
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	restore stdout
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->5
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 0->18
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	redirect: 1->1
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	after replace
'sed'	'-e'	's/1/Yes/g'	'-e'	's/0/No/g'	
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork
                 [/usr/bin/wc]	close_g_fd_to_close                 [/usr/bin/wc]	close(18)
                 [/usr/bin/wc]	fork_and_exec:	about to launch /usr/bin/wc
                 [/usr/bin/wc]	exec(/usr/bin/wc)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	fork_and_exec:	/bin/sed = 10614 launched
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	pipe_exec2 returned: 10614
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	free item: 'base64 /dev/urandom' (0x525a360)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	free item: 'head -c100' (0x525a420)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	free item: 'grep 42' (0x525a4d0)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	free item: 'wc -l' (0x525a580)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	free item: 'sed -e %paired_quote%1 -e %paired_quote%2' (0x525a630)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	waiting base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2 to finish
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	change g_awaited_process from 0 to 10614
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	wait 10614 to stop
                  [/bin/sed]	close_g_fd_to_close                  [/bin/sed]	close(18)
                  [/bin/sed]	fork_and_exec:	about to launch /bin/sed
                  [/bin/sed]	exec(/bin/sed)
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	waitpid(10614) returned
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2 finished
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	change g_awaited_process from 10614 to 0
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	command processed: 'base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e "s/1/Yes/g" -e "s/0/No/g"'
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	-------------------------
[base64 /dev/urandom | head -c100 | grep 42 | wc -l | sed -e %paired_quote%1 -e %paired_quote%2]	
[test]	testing path_is_used
[test]	duplicated stdin to 20
[test]	duplicated stdout to 21
[test]	
[test]	-----------------------
[test]	process command: 'unsetenv PATH'
[test]	quotes replaced: 'unsetenv PATH'
[test]	trimmed = unsetenv PATH
[test]	no comments = unsetenv PATH
[test]	cmd: 'unsetenv PATH'
[test]	pipe_parse(unsetenv PATH)
[test]	cmd[0] = 'unsetenv PATH'
[unsetenv PATH]	exec 0 > unsetenv PATH > 1
[unsetenv PATH]	restore stdin
[unsetenv PATH]	redirect: 0->20
[unsetenv PATH]	restore stdout
[unsetenv PATH]	redirect: 1->21
[unsetenv PATH]	redirect: 0->0
[unsetenv PATH]	redirect: 1->1
[unsetenv PATH]	after replace
'unsetenv'	'PATH'	
[unsetenv PATH]	pipe_exec2 returned: 0
[unsetenv PATH]	free item: 'unsetenv PATH' (0x52675b0)
[unsetenv PATH]	command processed: 'unsetenv PATH'
[unsetenv PATH]	-------------------------
[unsetenv PATH]	
[unsetenv PATH]	
[unsetenv PATH]	-----------------------
[unsetenv PATH]	process command: 'echo path = $PATH'
[unsetenv PATH]	quotes replaced: 'echo path = $PATH'
[unsetenv PATH]	trimmed = echo path = $PATH
[unsetenv PATH]	no comments = echo path = $PATH
[unsetenv PATH]	cmd: 'echo path = $PATH'
[unsetenv PATH]	pipe_parse(echo path = $PATH)
[unsetenv PATH]	cmd[0] = 'echo path = $PATH'
[echo path = $PATH]	exec 0 > echo path = $PATH > 1
[echo path = $PATH]	restore stdin
[echo path = $PATH]	redirect: 0->20
[echo path = $PATH]	restore stdout
[echo path = $PATH]	redirect: 1->21
[echo path = $PATH]	redirect: 0->0
[echo path = $PATH]	redirect: 1->1
[echo path = $PATH]	after replace
'echo'	'path'	'='	
[echo path = $PATH]	echo: command not found
[echo path = $PATH]	pipe_exec2 returned: 0
[echo path = $PATH]	free item: 'echo path = $PATH' (0x52680b0)
[echo path = $PATH]	command processed: 'echo path = $PATH'
[echo path = $PATH]	-------------------------
[echo path = $PATH]	
[echo path = $PATH]	
[echo path = $PATH]	-----------------------
[echo path = $PATH]	process command: 'setenv PATH /bin:/usr/bin'
[echo path = $PATH]	quotes replaced: 'setenv PATH /bin:/usr/bin'
[echo path = $PATH]	trimmed = setenv PATH /bin:/usr/bin
[echo path = $PATH]	no comments = setenv PATH /bin:/usr/bin
[echo path = $PATH]	cmd: 'setenv PATH /bin:/usr/bin'
[echo path = $PATH]	pipe_parse(setenv PATH /bin:/usr/bin)
[echo path = $PATH]	cmd[0] = 'setenv PATH /bin:/usr/bin'
[setenv PATH /bin:/usr/bin]	exec 0 > setenv PATH /bin:/usr/bin > 1
[setenv PATH /bin:/usr/bin]	restore stdin
[setenv PATH /bin:/usr/bin]	redirect: 0->20
[setenv PATH /bin:/usr/bin]	restore stdout
[setenv PATH /bin:/usr/bin]	redirect: 1->21
[setenv PATH /bin:/usr/bin]	redirect: 0->0
[setenv PATH /bin:/usr/bin]	redirect: 1->1
[setenv PATH /bin:/usr/bin]	after replace
'setenv'	'PATH'	'/bin:/usr/bin'	
[setenv PATH /bin:/usr/bin]	pipe_exec2 returned: 0
[setenv PATH /bin:/usr/bin]	free item: 'setenv PATH /bin:/usr/bin' (0x5268960)
[setenv PATH /bin:/usr/bin]	command processed: 'setenv PATH /bin:/usr/bin'
[setenv PATH /bin:/usr/bin]	-------------------------
[setenv PATH /bin:/usr/bin]	
[setenv PATH /bin:/usr/bin]	
[setenv PATH /bin:/usr/bin]	-----------------------
[setenv PATH /bin:/usr/bin]	process command: 'echo path = $PATH'
[setenv PATH /bin:/usr/bin]	quotes replaced: 'echo path = $PATH'
[setenv PATH /bin:/usr/bin]	trimmed = echo path = $PATH
[setenv PATH /bin:/usr/bin]	no comments = echo path = $PATH
[setenv PATH /bin:/usr/bin]	cmd: 'echo path = $PATH'
[setenv PATH /bin:/usr/bin]	pipe_parse(echo path = $PATH)
[setenv PATH /bin:/usr/bin]	cmd[0] = 'echo path = $PATH'
[echo path = $PATH]	exec 0 > echo path = $PATH > 1
[echo path = $PATH]	restore stdin
[echo path = $PATH]	redirect: 0->20
[echo path = $PATH]	restore stdout
[echo path = $PATH]	redirect: 1->21
[echo path = $PATH]	redirect: 0->0
[echo path = $PATH]	redirect: 1->1
[echo path = $PATH]	after replace
'echo'	'path'	'='	'/bin:/usr/bin'	
[echo path = $PATH]	fork
[echo path = $PATH]	fork_and_exec:	/bin/echo = 10615 launched
[echo path = $PATH]	pipe_exec2 returned: 10615
[echo path = $PATH]	free item: 'echo path = $PATH' (0x526a1b0)
[echo path = $PATH]	waiting echo path = $PATH to finish
[echo path = $PATH]	change g_awaited_process from 0 to 10615
[echo path = $PATH]	wait 10615 to stop
                   [/bin/echo]	close_g_fd_to_close                   [/bin/echo]	close(18)
                   [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                   [/bin/echo]	exec(/bin/echo)
[echo path = $PATH]	waitpid(10615) returned
[echo path = $PATH]	echo path = $PATH finished
[echo path = $PATH]	change g_awaited_process from 10615 to 0
[echo path = $PATH]	command processed: 'echo path = $PATH'
[echo path = $PATH]	-------------------------
[echo path = $PATH]	
[test]	close(1)
[test]	testing test_exec
[test]	duplicated stdin to 23
[test]	duplicated stdout to 24
[test]	
[test]	-----------------------
[test]	process command: 'foo'
[test]	quotes replaced: 'foo'
[test]	trimmed = foo
[test]	no comments = foo
[test]	cmd: 'foo'
[test]	pipe_parse(foo)
[test]	cmd[0] = 'foo'
[foo]	exec 0 > foo > 1
[foo]	restore stdin
[foo]	redirect: 0->23
[foo]	restore stdout
[foo]	redirect: 1->24
[foo]	redirect: 0->0
[foo]	redirect: 1->1
[foo]	after replace
'foo'	
[foo]	foo: command not found
[foo]	pipe_exec2 returned: 0
[foo]	free item: 'foo' (0x5270870)
[foo]	command processed: 'foo'
[foo]	-------------------------
[foo]	
[foo]	
[foo]	-----------------------
[foo]	process command: 'echo 1   2    	3'
[foo]	quotes replaced: 'echo 1   2    	3'
[foo]	trimmed = echo 1   2    	3
[foo]	no comments = echo 1   2    	3
[foo]	cmd: 'echo 1   2    	3'
[foo]	pipe_parse(echo 1   2    	3)
[foo]	cmd[0] = 'echo 1   2    	3'
[echo 1   2    	3]	exec 0 > echo 1   2    	3 > 1
[echo 1   2    	3]	restore stdin
[echo 1   2    	3]	redirect: 0->23
[echo 1   2    	3]	restore stdout
[echo 1   2    	3]	redirect: 1->24
[echo 1   2    	3]	redirect: 0->0
[echo 1   2    	3]	redirect: 1->1
[echo 1   2    	3]	after replace
'echo'	'1'	'2'	'3'	
[echo 1   2    	3]	fork
[echo 1   2    	3]	fork_and_exec:	/bin/echo = 10616 launched
[echo 1   2    	3]	pipe_exec2 returned: 10616
[echo 1   2    	3]	free item: 'echo 1   2    	3' (0x5270f50)
[echo 1   2    	3]	waiting echo 1   2    	3 to finish
[echo 1   2    	3]	change g_awaited_process from 0 to 10616
[echo 1   2    	3]	wait 10616 to stop
                    [/bin/echo]	close_g_fd_to_close                    [/bin/echo]	close(18)
                    [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                    [/bin/echo]	exec(/bin/echo)
[echo 1   2    	3]	waitpid(10616) returned
[echo 1   2    	3]	echo 1   2    	3 finished
[echo 1   2    	3]	change g_awaited_process from 10616 to 0
[echo 1   2    	3]	command processed: 'echo 1   2    	3'
[echo 1   2    	3]	-------------------------
[echo 1   2    	3]	
[echo 1   2    	3]	
[echo 1   2    	3]	-----------------------
[echo 1   2    	3]	process command: ''
[echo 1   2    	3]	quotes replaced: ''
[echo 1   2    	3]	
[echo 1   2    	3]	-----------------------
[echo 1   2    	3]	process command: '	 '
[echo 1   2    	3]	quotes replaced: '	 '
[test]	close(1)
[test]	testing test_pipe_1
[test]	duplicated stdin to 26
[test]	duplicated stdout to 27
[test]	
[test]	-----------------------
[test]	process command: 'echo 123 |rev'
[test]	quotes replaced: 'echo 123 |rev'
[test]	trimmed = echo 123 |rev
[test]	no comments = echo 123 |rev
[test]	cmd: 'echo 123 |rev'
[test]	pipe_parse(echo 123 |rev)
[test]	cmd[0] = 'echo 123 '
[echo 123 |rev]	new pipe: r=28, w=29
[echo 123 |rev]	exec 0 > echo 123 > 29
[echo 123 |rev]	restore stdin
[echo 123 |rev]	redirect: 0->26
[echo 123 |rev]	restore stdout
[echo 123 |rev]	redirect: 1->27
[echo 123 |rev]	redirect: 0->0
[echo 123 |rev]	redirect: 1->29
[echo 123 |rev]	after replace
'echo'	'123'	
[echo 123 |rev]	fork
[echo 123 |rev]	fork_and_exec:	/bin/echo = 10617 launched
[echo 123 |rev]	close(29)
[echo 123 |rev]	exec 28 > rev > 1
[echo 123 |rev]	restore stdin
[echo 123 |rev]	redirect: 0->26
[echo 123 |rev]	restore stdout
[echo 123 |rev]	redirect: 1->27
[echo 123 |rev]	redirect: 0->28
[echo 123 |rev]	redirect: 1->1
[echo 123 |rev]	after replace
'rev'	
[echo 123 |rev]	fork
                     [/bin/echo]	close_g_fd_to_close                     [/bin/echo]	close(28)
                     [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                     [/bin/echo]	exec(/bin/echo)
[echo 123 |rev]	fork_and_exec:	/usr/bin/rev = 10618 launched
[echo 123 |rev]	pipe_exec2 returned: 10618
[echo 123 |rev]	free item: 'echo 123' (0x52777b0)
[echo 123 |rev]	free item: 'rev' (0x5277860)
[echo 123 |rev]	waiting echo 123 |rev to finish
[echo 123 |rev]	change g_awaited_process from 0 to 10618
[echo 123 |rev]	wait 10618 to stop
                      [/usr/bin/rev]	close_g_fd_to_close                      [/usr/bin/rev]	close(28)
                      [/usr/bin/rev]	fork_and_exec:	about to launch /usr/bin/rev
                      [/usr/bin/rev]	exec(/usr/bin/rev)
[echo 123 |rev]	waitpid(10618) returned
[echo 123 |rev]	echo 123 |rev finished
[echo 123 |rev]	change g_awaited_process from 10618 to 0
[echo 123 |rev]	command processed: 'echo 123 |rev'
[echo 123 |rev]	-------------------------
[echo 123 |rev]	
[echo 123 |rev]	
[echo 123 |rev]	-----------------------
[echo 123 |rev]	process command: 'echo 123 | cat -e |rev'
[echo 123 |rev]	quotes replaced: 'echo 123 | cat -e |rev'
[echo 123 |rev]	trimmed = echo 123 | cat -e |rev
[echo 123 |rev]	no comments = echo 123 | cat -e |rev
[echo 123 |rev]	cmd: 'echo 123 | cat -e |rev'
[echo 123 |rev]	pipe_parse(echo 123 | cat -e |rev)
[echo 123 |rev]	cmd[0] = 'echo 123 '
[echo 123 | cat -e |rev]	new pipe: r=29, w=30
[echo 123 | cat -e |rev]	exec 0 > echo 123 > 30
[echo 123 | cat -e |rev]	restore stdin
[echo 123 | cat -e |rev]	redirect: 0->26
[echo 123 | cat -e |rev]	restore stdout
[echo 123 | cat -e |rev]	redirect: 1->27
[echo 123 | cat -e |rev]	redirect: 0->0
[echo 123 | cat -e |rev]	redirect: 1->30
[echo 123 | cat -e |rev]	after replace
'echo'	'123'	
[echo 123 | cat -e |rev]	fork
[echo 123 | cat -e |rev]	fork_and_exec:	/bin/echo = 10619 launched
[echo 123 | cat -e |rev]	close(30)
[echo 123 | cat -e |rev]	new pipe: r=30, w=31
[echo 123 | cat -e |rev]	exec 29 > cat -e > 31
[echo 123 | cat -e |rev]	restore stdin
[echo 123 | cat -e |rev]	redirect: 0->26
[echo 123 | cat -e |rev]	restore stdout
[echo 123 | cat -e |rev]	redirect: 1->27
[echo 123 | cat -e |rev]	redirect: 0->29
[echo 123 | cat -e |rev]	redirect: 1->31
[echo 123 | cat -e |rev]	after replace
'cat'	'-e'	
[echo 123 | cat -e |rev]	fork
                       [/bin/echo]	close_g_fd_to_close                       [/bin/echo]	close(29)
                       [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                       [/bin/echo]	exec(/bin/echo)
[echo 123 | cat -e |rev]	fork_and_exec:	/bin/cat = 10620 launched
[echo 123 | cat -e |rev]	close(31)
[echo 123 | cat -e |rev]	exec 30 > rev > 1
[echo 123 | cat -e |rev]	restore stdin
[echo 123 | cat -e |rev]	redirect: 0->26
[echo 123 | cat -e |rev]	restore stdout
[echo 123 | cat -e |rev]	redirect: 1->27
[echo 123 | cat -e |rev]	redirect: 0->30
[echo 123 | cat -e |rev]	redirect: 1->1
[echo 123 | cat -e |rev]	after replace
'rev'	
[echo 123 | cat -e |rev]	fork
                        [/bin/cat]	close_g_fd_to_close                        [/bin/cat]	close(30)
                        [/bin/cat]	fork_and_exec:	about to launch /bin/cat
                        [/bin/cat]	exec(/bin/cat)
[echo 123 | cat -e |rev]	fork_and_exec:	/usr/bin/rev = 10621 launched
[echo 123 | cat -e |rev]	pipe_exec2 returned: 10621
[echo 123 | cat -e |rev]	free item: 'echo 123' (0x5278370)
[echo 123 | cat -e |rev]	free item: 'cat -e' (0x5278420)
[echo 123 | cat -e |rev]	free item: 'rev' (0x52784d0)
[echo 123 | cat -e |rev]	waiting echo 123 | cat -e |rev to finish
[echo 123 | cat -e |rev]	change g_awaited_process from 0 to 10621
[echo 123 | cat -e |rev]	wait 10621 to stop
                         [/usr/bin/rev]	close_g_fd_to_close                         [/usr/bin/rev]	close(30)
                         [/usr/bin/rev]	fork_and_exec:	about to launch /usr/bin/rev
                         [/usr/bin/rev]	exec(/usr/bin/rev)
[echo 123 | cat -e |rev]	waitpid(10621) returned
[echo 123 | cat -e |rev]	echo 123 | cat -e |rev finished
[echo 123 | cat -e |rev]	change g_awaited_process from 10621 to 0
[echo 123 | cat -e |rev]	command processed: 'echo 123 | cat -e |rev'
[echo 123 | cat -e |rev]	-------------------------
[echo 123 | cat -e |rev]	
[echo 123 | cat -e |rev]	
[echo 123 | cat -e |rev]	-----------------------
[echo 123 | cat -e |rev]	process command: 'echo 123456789 | head -c3'
[echo 123 | cat -e |rev]	quotes replaced: 'echo 123456789 | head -c3'
[echo 123 | cat -e |rev]	trimmed = echo 123456789 | head -c3
[echo 123 | cat -e |rev]	no comments = echo 123456789 | head -c3
[echo 123 | cat -e |rev]	cmd: 'echo 123456789 | head -c3'
[echo 123 | cat -e |rev]	pipe_parse(echo 123456789 | head -c3)
[echo 123 | cat -e |rev]	cmd[0] = 'echo 123456789 '
[echo 123456789 | head -c3]	new pipe: r=31, w=32
[echo 123456789 | head -c3]	exec 0 > echo 123456789 > 32
[echo 123456789 | head -c3]	restore stdin
[echo 123456789 | head -c3]	redirect: 0->26
[echo 123456789 | head -c3]	restore stdout
[echo 123456789 | head -c3]	redirect: 1->27
[echo 123456789 | head -c3]	redirect: 0->0
[echo 123456789 | head -c3]	redirect: 1->32
[echo 123456789 | head -c3]	after replace
'echo'	'123456789'	
[echo 123456789 | head -c3]	fork
[echo 123456789 | head -c3]	fork_and_exec:	/bin/echo = 10622 launched
[echo 123456789 | head -c3]	close(32)
[echo 123456789 | head -c3]	exec 31 > head -c3 > 1
[echo 123456789 | head -c3]	restore stdin
[echo 123456789 | head -c3]	redirect: 0->26
[echo 123456789 | head -c3]	restore stdout
[echo 123456789 | head -c3]	redirect: 1->27
[echo 123456789 | head -c3]	redirect: 0->31
[echo 123456789 | head -c3]	redirect: 1->1
[echo 123456789 | head -c3]	after replace
'head'	'-c3'	
[echo 123456789 | head -c3]	fork
                          [/bin/echo]	close_g_fd_to_close                          [/bin/echo]	close(31)
                          [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                          [/bin/echo]	exec(/bin/echo)
[echo 123456789 | head -c3]	fork_and_exec:	/usr/bin/head = 10623 launched
[echo 123456789 | head -c3]	pipe_exec2 returned: 10623
[echo 123456789 | head -c3]	free item: 'echo 123456789' (0x5279370)
[echo 123456789 | head -c3]	free item: 'head -c3' (0x5279420)
[echo 123456789 | head -c3]	waiting echo 123456789 | head -c3 to finish
[echo 123456789 | head -c3]	change g_awaited_process from 0 to 10623
[echo 123456789 | head -c3]	wait 10623 to stop
                           [/usr/bin/head]	close_g_fd_to_close                           [/usr/bin/head]	close(31)
                           [/usr/bin/head]	fork_and_exec:	about to launch /usr/bin/head
                           [/usr/bin/head]	exec(/usr/bin/head)
[echo 123456789 | head -c3]	waitpid(10623) returned
[echo 123456789 | head -c3]	echo 123456789 | head -c3 finished
[echo 123456789 | head -c3]	change g_awaited_process from 10623 to 0
[echo 123456789 | head -c3]	command processed: 'echo 123456789 | head -c3'
[echo 123456789 | head -c3]	-------------------------
[echo 123456789 | head -c3]	
[test]	close(1)
[test]	testing quotes
[test]	duplicated stdin to 33
[test]	duplicated stdout to 34
[test]	
[test]	-----------------------
[test]	process command: 'rmdir  "dir  with  spaces"; 	"mkdir" "dir  with  spaces" ; ls "dir  with  spaces"'
[test]	quote replaced: 'dir  with  spaces' -> '%paired_quote%1'
[test]	quote replaced: 'mkdir' -> '%paired_quote%2'
[test]	quote replaced: 'dir  with  spaces' -> '%paired_quote%3'
[test]	quote replaced: 'dir  with  spaces' -> '%paired_quote%4'
[test]	quotes replaced: 'rmdir  %paired_quote%1; 	%paired_quote%2 %paired_quote%3 ; ls %paired_quote%4'
[test]	trimmed = rmdir  %paired_quote%1; 	%paired_quote%2 %paired_quote%3 ; ls %paired_quote%4
[test]	no comments = rmdir  %paired_quote%1; 	%paired_quote%2 %paired_quote%3 ; ls %paired_quote%4
[test]	cmd: 'rmdir  %paired_quote%1'
[test]	pipe_parse(rmdir  %paired_quote%1)
[test]	cmd[0] = 'rmdir  %paired_quote%1'
[rmdir  %paired_quote%1]	exec 0 > rmdir  %paired_quote%1 > 1
[rmdir  %paired_quote%1]	restore stdin
[rmdir  %paired_quote%1]	redirect: 0->33
[rmdir  %paired_quote%1]	restore stdout
[rmdir  %paired_quote%1]	redirect: 1->34
[rmdir  %paired_quote%1]	redirect: 0->0
[rmdir  %paired_quote%1]	redirect: 1->1
[rmdir  %paired_quote%1]	after replace
'rmdir'	'dir  with  spaces'	
[rmdir  %paired_quote%1]	fork
[rmdir  %paired_quote%1]	fork_and_exec:	/bin/rmdir = 10624 launched
[rmdir  %paired_quote%1]	pipe_exec2 returned: 10624
[rmdir  %paired_quote%1]	free item: 'rmdir  %paired_quote%1' (0x5280590)
[rmdir  %paired_quote%1]	waiting rmdir  %paired_quote%1 to finish
[rmdir  %paired_quote%1]	change g_awaited_process from 0 to 10624
[rmdir  %paired_quote%1]	wait 10624 to stop
                            [/bin/rmdir]	close_g_fd_to_close                            [/bin/rmdir]	close(31)
                            [/bin/rmdir]	fork_and_exec:	about to launch /bin/rmdir
                            [/bin/rmdir]	exec(/bin/rmdir)
[rmdir  %paired_quote%1]	waitpid(10624) returned
[rmdir  %paired_quote%1]	rmdir  %paired_quote%1 finished
[rmdir  %paired_quote%1]	change g_awaited_process from 10624 to 0
[rmdir  %paired_quote%1]	cmd: ' 	%paired_quote%2 %paired_quote%3 '
[rmdir  %paired_quote%1]	pipe_parse(%paired_quote%2 %paired_quote%3)
[rmdir  %paired_quote%1]	cmd[0] = '%paired_quote%2 %paired_quote%3'
[%paired_quote%2 %paired_quote%3]	exec 0 > %paired_quote%2 %paired_quote%3 > 1
[%paired_quote%2 %paired_quote%3]	restore stdin
[%paired_quote%2 %paired_quote%3]	redirect: 0->33
[%paired_quote%2 %paired_quote%3]	restore stdout
[%paired_quote%2 %paired_quote%3]	redirect: 1->34
[%paired_quote%2 %paired_quote%3]	redirect: 0->0
[%paired_quote%2 %paired_quote%3]	redirect: 1->1
[%paired_quote%2 %paired_quote%3]	after replace
'mkdir'	'dir  with  spaces'	
[%paired_quote%2 %paired_quote%3]	fork
[%paired_quote%2 %paired_quote%3]	fork_and_exec:	/bin/mkdir = 10625 launched
[%paired_quote%2 %paired_quote%3]	pipe_exec2 returned: 10625
[%paired_quote%2 %paired_quote%3]	free item: '%paired_quote%2 %paired_quote%3' (0x5280d30)
[%paired_quote%2 %paired_quote%3]	waiting %paired_quote%2 %paired_quote%3 to finish
[%paired_quote%2 %paired_quote%3]	change g_awaited_process from 0 to 10625
[%paired_quote%2 %paired_quote%3]	wait 10625 to stop
                             [/bin/mkdir]	close_g_fd_to_close                             [/bin/mkdir]	close(31)
                             [/bin/mkdir]	fork_and_exec:	about to launch /bin/mkdir
                             [/bin/mkdir]	exec(/bin/mkdir)
[%paired_quote%2 %paired_quote%3]	waitpid(10625) returned
[%paired_quote%2 %paired_quote%3]	%paired_quote%2 %paired_quote%3 finished
[%paired_quote%2 %paired_quote%3]	change g_awaited_process from 10625 to 0
[%paired_quote%2 %paired_quote%3]	cmd: ' ls %paired_quote%4'
[%paired_quote%2 %paired_quote%3]	pipe_parse(ls %paired_quote%4)
[%paired_quote%2 %paired_quote%3]	cmd[0] = 'ls %paired_quote%4'
[ls %paired_quote%4]	exec 0 > ls %paired_quote%4 > 1
[ls %paired_quote%4]	restore stdin
[ls %paired_quote%4]	redirect: 0->33
[ls %paired_quote%4]	restore stdout
[ls %paired_quote%4]	redirect: 1->34
[ls %paired_quote%4]	redirect: 0->0
[ls %paired_quote%4]	redirect: 1->1
[ls %paired_quote%4]	after replace
'ls'	'dir  with  spaces'	
[ls %paired_quote%4]	fork
[ls %paired_quote%4]	fork_and_exec:	/bin/ls = 10626 launched
[ls %paired_quote%4]	pipe_exec2 returned: 10626
[ls %paired_quote%4]	free item: 'ls %paired_quote%4' (0x5281520)
[ls %paired_quote%4]	waiting ls %paired_quote%4 to finish
[ls %paired_quote%4]	change g_awaited_process from 0 to 10626
[ls %paired_quote%4]	wait 10626 to stop
                              [/bin/ls]	close_g_fd_to_close                              [/bin/ls]	close(31)
                              [/bin/ls]	fork_and_exec:	about to launch /bin/ls
                              [/bin/ls]	exec(/bin/ls)
[ls %paired_quote%4]	waitpid(10626) returned
[ls %paired_quote%4]	ls %paired_quote%4 finished
[ls %paired_quote%4]	change g_awaited_process from 10626 to 0
[ls %paired_quote%4]	command processed: 'rmdir  "dir  with  spaces"; 	"mkdir" "dir  with  spaces" ; ls "dir  with  spaces"'
[ls %paired_quote%4]	-------------------------
[ls %paired_quote%4]	
[ls %paired_quote%4]	
[ls %paired_quote%4]	-----------------------
[ls %paired_quote%4]	process command: 'rm -r "not empty dir";mkdir "not empty dir"; mkdir "not empty dir"/"dir	one"; ls "not empty dir"/"dir	one"'
[ls %paired_quote%4]	quote replaced: 'not empty dir' -> '%paired_quote%1'
[ls %paired_quote%4]	quote replaced: 'not empty dir' -> '%paired_quote%2'
[ls %paired_quote%4]	quote replaced: 'not empty dir' -> '%paired_quote%3'
[ls %paired_quote%4]	quote replaced: 'dir	one' -> '%paired_quote%4'
[ls %paired_quote%4]	quote replaced: 'not empty dir' -> '%paired_quote%5'
[ls %paired_quote%4]	quote replaced: 'dir	one' -> '%paired_quote%6'
[ls %paired_quote%4]	quotes replaced: 'rm -r %paired_quote%1;mkdir %paired_quote%2; mkdir %paired_quote%3/%paired_quote%4; ls %paired_quote%5/%paired_quote%6'
[ls %paired_quote%4]	trimmed = rm -r %paired_quote%1;mkdir %paired_quote%2; mkdir %paired_quote%3/%paired_quote%4; ls %paired_quote%5/%paired_quote%6
[ls %paired_quote%4]	no comments = rm -r %paired_quote%1;mkdir %paired_quote%2; mkdir %paired_quote%3/%paired_quote%4; ls %paired_quote%5/%paired_quote%6
[ls %paired_quote%4]	cmd: 'rm -r %paired_quote%1'
[ls %paired_quote%4]	pipe_parse(rm -r %paired_quote%1)
[ls %paired_quote%4]	cmd[0] = 'rm -r %paired_quote%1'
[rm -r %paired_quote%1]	exec 0 > rm -r %paired_quote%1 > 1
[rm -r %paired_quote%1]	restore stdin
[rm -r %paired_quote%1]	redirect: 0->33
[rm -r %paired_quote%1]	restore stdout
[rm -r %paired_quote%1]	redirect: 1->34
[rm -r %paired_quote%1]	redirect: 0->0
[rm -r %paired_quote%1]	redirect: 1->1
[rm -r %paired_quote%1]	after replace
'rm'	'-r'	'not empty dir'	
[rm -r %paired_quote%1]	fork
[rm -r %paired_quote%1]	fork_and_exec:	/bin/rm = 10627 launched
[rm -r %paired_quote%1]	pipe_exec2 returned: 10627
[rm -r %paired_quote%1]	free item: 'rm -r %paired_quote%1' (0x5282c10)
[rm -r %paired_quote%1]	waiting rm -r %paired_quote%1 to finish
[rm -r %paired_quote%1]	change g_awaited_process from 0 to 10627
[rm -r %paired_quote%1]	wait 10627 to stop
                               [/bin/rm]	close_g_fd_to_close                               [/bin/rm]	close(31)
                               [/bin/rm]	fork_and_exec:	about to launch /bin/rm
                               [/bin/rm]	exec(/bin/rm)
[rm -r %paired_quote%1]	waitpid(10627) returned
[rm -r %paired_quote%1]	rm -r %paired_quote%1 finished
[rm -r %paired_quote%1]	change g_awaited_process from 10627 to 0
[rm -r %paired_quote%1]	cmd: 'mkdir %paired_quote%2'
[rm -r %paired_quote%1]	pipe_parse(mkdir %paired_quote%2)
[rm -r %paired_quote%1]	cmd[0] = 'mkdir %paired_quote%2'
[mkdir %paired_quote%2]	exec 0 > mkdir %paired_quote%2 > 1
[mkdir %paired_quote%2]	restore stdin
[mkdir %paired_quote%2]	redirect: 0->33
[mkdir %paired_quote%2]	restore stdout
[mkdir %paired_quote%2]	redirect: 1->34
[mkdir %paired_quote%2]	redirect: 0->0
[mkdir %paired_quote%2]	redirect: 1->1
[mkdir %paired_quote%2]	after replace
'mkdir'	'not empty dir'	
[mkdir %paired_quote%2]	fork
[mkdir %paired_quote%2]	fork_and_exec:	/bin/mkdir = 10628 launched
[mkdir %paired_quote%2]	pipe_exec2 returned: 10628
[mkdir %paired_quote%2]	free item: 'mkdir %paired_quote%2' (0x5283550)
[mkdir %paired_quote%2]	waiting mkdir %paired_quote%2 to finish
[mkdir %paired_quote%2]	change g_awaited_process from 0 to 10628
[mkdir %paired_quote%2]	wait 10628 to stop
                                [/bin/mkdir]	close_g_fd_to_close                                [/bin/mkdir]	close(31)
                                [/bin/mkdir]	fork_and_exec:	about to launch /bin/mkdir
                                [/bin/mkdir]	exec(/bin/mkdir)
[mkdir %paired_quote%2]	waitpid(10628) returned
[mkdir %paired_quote%2]	mkdir %paired_quote%2 finished
[mkdir %paired_quote%2]	change g_awaited_process from 10628 to 0
[mkdir %paired_quote%2]	cmd: ' mkdir %paired_quote%3/%paired_quote%4'
[mkdir %paired_quote%2]	pipe_parse(mkdir %paired_quote%3/%paired_quote%4)
[mkdir %paired_quote%2]	cmd[0] = 'mkdir %paired_quote%3/%paired_quote%4'
[mkdir %paired_quote%3/%paired_quote%4]	exec 0 > mkdir %paired_quote%3/%paired_quote%4 > 1
[mkdir %paired_quote%3/%paired_quote%4]	restore stdin
[mkdir %paired_quote%3/%paired_quote%4]	redirect: 0->33
[mkdir %paired_quote%3/%paired_quote%4]	restore stdout
[mkdir %paired_quote%3/%paired_quote%4]	redirect: 1->34
[mkdir %paired_quote%3/%paired_quote%4]	redirect: 0->0
[mkdir %paired_quote%3/%paired_quote%4]	redirect: 1->1
[mkdir %paired_quote%3/%paired_quote%4]	after replace
'mkdir'	'not empty dir/dir	one'	
[mkdir %paired_quote%3/%paired_quote%4]	fork
[mkdir %paired_quote%3/%paired_quote%4]	fork_and_exec:	/bin/mkdir = 10629 launched
[mkdir %paired_quote%3/%paired_quote%4]	pipe_exec2 returned: 10629
[mkdir %paired_quote%3/%paired_quote%4]	free item: 'mkdir %paired_quote%3/%paired_quote%4' (0x5283db0)
[mkdir %paired_quote%3/%paired_quote%4]	waiting mkdir %paired_quote%3/%paired_quote%4 to finish
[mkdir %paired_quote%3/%paired_quote%4]	change g_awaited_process from 0 to 10629
[mkdir %paired_quote%3/%paired_quote%4]	wait 10629 to stop
                                 [/bin/mkdir]	close_g_fd_to_close                                 [/bin/mkdir]	close(31)
                                 [/bin/mkdir]	fork_and_exec:	about to launch /bin/mkdir
                                 [/bin/mkdir]	exec(/bin/mkdir)
[mkdir %paired_quote%3/%paired_quote%4]	waitpid(10629) returned
[mkdir %paired_quote%3/%paired_quote%4]	mkdir %paired_quote%3/%paired_quote%4 finished
[mkdir %paired_quote%3/%paired_quote%4]	change g_awaited_process from 10629 to 0
[mkdir %paired_quote%3/%paired_quote%4]	cmd: ' ls %paired_quote%5/%paired_quote%6'
[mkdir %paired_quote%3/%paired_quote%4]	pipe_parse(ls %paired_quote%5/%paired_quote%6)
[mkdir %paired_quote%3/%paired_quote%4]	cmd[0] = 'ls %paired_quote%5/%paired_quote%6'
[ls %paired_quote%5/%paired_quote%6]	exec 0 > ls %paired_quote%5/%paired_quote%6 > 1
[ls %paired_quote%5/%paired_quote%6]	restore stdin
[ls %paired_quote%5/%paired_quote%6]	redirect: 0->33
[ls %paired_quote%5/%paired_quote%6]	restore stdout
[ls %paired_quote%5/%paired_quote%6]	redirect: 1->34
[ls %paired_quote%5/%paired_quote%6]	redirect: 0->0
[ls %paired_quote%5/%paired_quote%6]	redirect: 1->1
[ls %paired_quote%5/%paired_quote%6]	after replace
'ls'	'not empty dir/dir	one'	
[ls %paired_quote%5/%paired_quote%6]	fork
[ls %paired_quote%5/%paired_quote%6]	fork_and_exec:	/bin/ls = 10630 launched
[ls %paired_quote%5/%paired_quote%6]	pipe_exec2 returned: 10630
[ls %paired_quote%5/%paired_quote%6]	free item: 'ls %paired_quote%5/%paired_quote%6' (0x52846e0)
[ls %paired_quote%5/%paired_quote%6]	waiting ls %paired_quote%5/%paired_quote%6 to finish
[ls %paired_quote%5/%paired_quote%6]	change g_awaited_process from 0 to 10630
[ls %paired_quote%5/%paired_quote%6]	wait 10630 to stop
                                  [/bin/ls]	close_g_fd_to_close                                  [/bin/ls]	close(31)
                                  [/bin/ls]	fork_and_exec:	about to launch /bin/ls
                                  [/bin/ls]	exec(/bin/ls)
[ls %paired_quote%5/%paired_quote%6]	waitpid(10630) returned
[ls %paired_quote%5/%paired_quote%6]	ls %paired_quote%5/%paired_quote%6 finished
[ls %paired_quote%5/%paired_quote%6]	change g_awaited_process from 10630 to 0
[ls %paired_quote%5/%paired_quote%6]	command processed: 'rm -r "not empty dir";mkdir "not empty dir"; mkdir "not empty dir"/"dir	one"; ls "not empty dir"/"dir	one"'
[ls %paired_quote%5/%paired_quote%6]	-------------------------
[ls %paired_quote%5/%paired_quote%6]	
[test]	close(1)
[test]	free item: '1' (0x528b460)
[test]	free item: '2' (0x528b510)
[test]	testing cd_bad
[test]	duplicated stdin to 36
[test]	duplicated stdout to 37
[test]	
[test]	-----------------------
[test]	process command: 'cd -'
[test]	quotes replaced: 'cd -'
[test]	trimmed = cd -
[test]	no comments = cd -
[test]	cmd: 'cd -'
[test]	pipe_parse(cd -)
[test]	cmd[0] = 'cd -'
[cd -]	exec 0 > cd - > 1
[cd -]	restore stdin
[cd -]	redirect: 0->36
[cd -]	restore stdout
[cd -]	redirect: 1->37
[cd -]	redirect: 0->0
[cd -]	redirect: 1->1
[cd -]	after replace
'cd'	'-'	
[cd -]	exec cd '-'
[cd -]	pipe_exec2 returned: 0
[cd -]	free item: 'cd -' (0x528bac0)
[cd -]	command processed: 'cd -'
[cd -]	-------------------------
[cd -]	
[cd -]	
[cd -]	-----------------------
[cd -]	process command: 'cd \'
[cd -]	quotes replaced: 'cd \'
[cd -]	trimmed = cd \
[cd -]	no comments = cd \
[cd -]	cmd: 'cd \'
[cd -]	pipe_parse(cd \)
[cd -]	cmd[0] = 'cd \'
[cd \]	exec 0 > cd \ > 1
[cd \]	restore stdin
[cd \]	redirect: 0->36
[cd \]	restore stdout
[cd \]	redirect: 1->37
[cd \]	redirect: 0->0
[cd \]	redirect: 1->1
[cd \]	after replace
'cd'	'\'	
[cd \]	exec cd '\'
[cd \]	pipe_exec2 returned: 0
[cd \]	free item: 'cd \' (0x528c0e0)
[cd \]	command processed: 'cd \'
[cd \]	-------------------------
[cd \]	
[test]	close(1)
[test]	pipe_parse(ls -l | sort | cat -e)
[test]	cmd[0] = 'ls -l '
[test]	free item: 'ls -l' (0x52921e0)
[test]	free item: 'sort' (0x5292290)
[test]	free item: 'cat -e' (0x5292340)
[test]	testing two_commands_bad
[test]	duplicated stdin to 39
[test]	duplicated stdout to 40
[test]	
[test]	-----------------------
[test]	process command: ';'
[test]	quotes replaced: ';'
[test]	trimmed = ;
[test]	no comments = ;
[test]	minishell: syntax error near unexpected token `;'
[test]	
[test]	-----------------------
[test]	process command: ';;'
[test]	quotes replaced: ';;'
[test]	trimmed = ;;
[test]	no comments = ;;
[test]	minishell: syntax error near unexpected token `;'
[test]	
[test]	-----------------------
[test]	process command: ';;;'
[test]	quotes replaced: ';;;'
[test]	trimmed = ;;;
[test]	no comments = ;;;
[test]	minishell: syntax error near unexpected token `;'
[test]	
[test]	-----------------------
[test]	process command: '; ;'
[test]	quotes replaced: '; ;'
[test]	trimmed = ; ;
[test]	no comments = ; ;
[test]	cmd: ' '
[test]	minishell: syntax error near unexpected token `;'
[test]	command processed: '; ;'
[test]	-------------------------
[test]	
[test]	close(1)
[test]	testing echo_quotes
[test]	duplicated stdin to 42
[test]	duplicated stdout to 43
[test]	
[test]	-----------------------
[test]	process command: 'echo "q"'
[test]	quote replaced: 'q' -> '%paired_quote%1'
[test]	quotes replaced: 'echo %paired_quote%1'
[test]	trimmed = echo %paired_quote%1
[test]	no comments = echo %paired_quote%1
[test]	cmd: 'echo %paired_quote%1'
[test]	pipe_parse(echo %paired_quote%1)
[test]	cmd[0] = 'echo %paired_quote%1'
[echo %paired_quote%1]	exec 0 > echo %paired_quote%1 > 1
[echo %paired_quote%1]	restore stdin
[echo %paired_quote%1]	redirect: 0->42
[echo %paired_quote%1]	restore stdout
[echo %paired_quote%1]	redirect: 1->43
[echo %paired_quote%1]	redirect: 0->0
[echo %paired_quote%1]	redirect: 1->1
[echo %paired_quote%1]	after replace
'echo'	'q'	
[echo %paired_quote%1]	fork
[echo %paired_quote%1]	fork_and_exec:	/bin/echo = 10631 launched
[echo %paired_quote%1]	pipe_exec2 returned: 10631
[echo %paired_quote%1]	free item: 'echo %paired_quote%1' (0x5298cb0)
[echo %paired_quote%1]	waiting echo %paired_quote%1 to finish
[echo %paired_quote%1]	change g_awaited_process from 0 to 10631
[echo %paired_quote%1]	wait 10631 to stop
                                   [/bin/echo]	close_g_fd_to_close                                   [/bin/echo]	close(31)
                                   [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                   [/bin/echo]	exec(/bin/echo)
[echo %paired_quote%1]	waitpid(10631) returned
[echo %paired_quote%1]	echo %paired_quote%1 finished
[echo %paired_quote%1]	change g_awaited_process from 10631 to 0
[echo %paired_quote%1]	command processed: 'echo "q"'
[echo %paired_quote%1]	-------------------------
[echo %paired_quote%1]	
[test]	close(1)
[test]	testing env
[test]	duplicated stdin to 45
[test]	duplicated stdout to 46
[test]	
[test]	-----------------------
[test]	process command: 'unsetenv w'
[test]	quotes replaced: 'unsetenv w'
[test]	trimmed = unsetenv w
[test]	no comments = unsetenv w
[test]	cmd: 'unsetenv w'
[test]	pipe_parse(unsetenv w)
[test]	cmd[0] = 'unsetenv w'
[unsetenv w]	exec 0 > unsetenv w > 1
[unsetenv w]	restore stdin
[unsetenv w]	redirect: 0->45
[unsetenv w]	restore stdout
[unsetenv w]	redirect: 1->46
[unsetenv w]	redirect: 0->0
[unsetenv w]	redirect: 1->1
[unsetenv w]	after replace
'unsetenv'	'w'	
[unsetenv w]	pipe_exec2 returned: 0
[unsetenv w]	free item: 'unsetenv w' (0x529f1d0)
[unsetenv w]	command processed: 'unsetenv w'
[unsetenv w]	-------------------------
[unsetenv w]	
[unsetenv w]	
[unsetenv w]	-----------------------
[unsetenv w]	process command: 'setenv q w'
[unsetenv w]	quotes replaced: 'setenv q w'
[unsetenv w]	trimmed = setenv q w
[unsetenv w]	no comments = setenv q w
[unsetenv w]	cmd: 'setenv q w'
[unsetenv w]	pipe_parse(setenv q w)
[unsetenv w]	cmd[0] = 'setenv q w'
[setenv q w]	exec 0 > setenv q w > 1
[setenv q w]	restore stdin
[setenv q w]	redirect: 0->45
[setenv q w]	restore stdout
[setenv q w]	redirect: 1->46
[setenv q w]	redirect: 0->0
[setenv q w]	redirect: 1->1
[setenv q w]	after replace
'setenv'	'q'	'w'	
[setenv q w]	pipe_exec2 returned: 0
[setenv q w]	free item: 'setenv q w' (0x529ffa0)
[setenv q w]	command processed: 'setenv q w'
[setenv q w]	-------------------------
[setenv q w]	
[setenv q w]	
[setenv q w]	-----------------------
[setenv q w]	process command: 'echo $q'
[setenv q w]	quotes replaced: 'echo $q'
[setenv q w]	trimmed = echo $q
[setenv q w]	no comments = echo $q
[setenv q w]	cmd: 'echo $q'
[setenv q w]	pipe_parse(echo $q)
[setenv q w]	cmd[0] = 'echo $q'
[echo $q]	exec 0 > echo $q > 1
[echo $q]	restore stdin
[echo $q]	redirect: 0->45
[echo $q]	restore stdout
[echo $q]	redirect: 1->46
[echo $q]	redirect: 0->0
[echo $q]	redirect: 1->1
[echo $q]	after replace
'echo'	'w'	
[echo $q]	fork
[echo $q]	fork_and_exec:	/bin/echo = 10632 launched
[echo $q]	pipe_exec2 returned: 10632
[echo $q]	free item: 'echo $q' (0x52a1d30)
[echo $q]	waiting echo $q to finish
[echo $q]	change g_awaited_process from 0 to 10632
[echo $q]	wait 10632 to stop
                                    [/bin/echo]	close_g_fd_to_close                                    [/bin/echo]	close(31)
                                    [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                    [/bin/echo]	exec(/bin/echo)
[echo $q]	waitpid(10632) returned
[echo $q]	echo $q finished
[echo $q]	change g_awaited_process from 10632 to 0
[echo $q]	command processed: 'echo $q'
[echo $q]	-------------------------
[echo $q]	
[echo $q]	
[echo $q]	-----------------------
[echo $q]	process command: 'unsetenv q'
[echo $q]	quotes replaced: 'unsetenv q'
[echo $q]	trimmed = unsetenv q
[echo $q]	no comments = unsetenv q
[echo $q]	cmd: 'unsetenv q'
[echo $q]	pipe_parse(unsetenv q)
[echo $q]	cmd[0] = 'unsetenv q'
[unsetenv q]	exec 0 > unsetenv q > 1
[unsetenv q]	restore stdin
[unsetenv q]	redirect: 0->45
[unsetenv q]	restore stdout
[unsetenv q]	redirect: 1->46
[unsetenv q]	redirect: 0->0
[unsetenv q]	redirect: 1->1
[unsetenv q]	after replace
'unsetenv'	'q'	
[unsetenv q]	pipe_exec2 returned: 0
[unsetenv q]	free item: 'unsetenv q' (0x52a2450)
[unsetenv q]	command processed: 'unsetenv q'
[unsetenv q]	-------------------------
[unsetenv q]	
[unsetenv q]	
[unsetenv q]	-----------------------
[unsetenv q]	process command: 'echo $q'
[unsetenv q]	quotes replaced: 'echo $q'
[unsetenv q]	trimmed = echo $q
[unsetenv q]	no comments = echo $q
[unsetenv q]	cmd: 'echo $q'
[unsetenv q]	pipe_parse(echo $q)
[unsetenv q]	cmd[0] = 'echo $q'
[echo $q]	exec 0 > echo $q > 1
[echo $q]	restore stdin
[echo $q]	redirect: 0->45
[echo $q]	restore stdout
[echo $q]	redirect: 1->46
[echo $q]	redirect: 0->0
[echo $q]	redirect: 1->1
[echo $q]	after replace
'echo'	
[echo $q]	fork
[echo $q]	fork_and_exec:	/bin/echo = 10633 launched
[echo $q]	pipe_exec2 returned: 10633
[echo $q]	free item: 'echo $q' (0x52a3210)
[echo $q]	waiting echo $q to finish
[echo $q]	change g_awaited_process from 0 to 10633
[echo $q]	wait 10633 to stop
                                     [/bin/echo]	close_g_fd_to_close                                     [/bin/echo]	close(31)
                                     [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                     [/bin/echo]	exec(/bin/echo)
[echo $q]	waitpid(10633) returned
[echo $q]	echo $q finished
[echo $q]	change g_awaited_process from 10633 to 0
[echo $q]	command processed: 'echo $q'
[echo $q]	-------------------------
[echo $q]	
[test]	close(1)
[test]	testing ls
[test]	duplicated stdin to 48
[test]	duplicated stdout to 49
[test]	
[test]	-----------------------
[test]	process command: 'echo ls:;ls'
[test]	quotes replaced: 'echo ls:;ls'
[test]	trimmed = echo ls:;ls
[test]	no comments = echo ls:;ls
[test]	cmd: 'echo ls:'
[test]	pipe_parse(echo ls:)
[test]	cmd[0] = 'echo ls:'
[echo ls:]	exec 0 > echo ls: > 1
[echo ls:]	restore stdin
[echo ls:]	redirect: 0->48
[echo ls:]	restore stdout
[echo ls:]	redirect: 1->49
[echo ls:]	redirect: 0->0
[echo ls:]	redirect: 1->1
[echo ls:]	after replace
'echo'	'ls:'	
[echo ls:]	fork
[echo ls:]	fork_and_exec:	/bin/echo = 10634 launched
[echo ls:]	pipe_exec2 returned: 10634
[echo ls:]	free item: 'echo ls:' (0x52a9610)
[echo ls:]	waiting echo ls: to finish
[echo ls:]	change g_awaited_process from 0 to 10634
[echo ls:]	wait 10634 to stop
                                      [/bin/echo]	close_g_fd_to_close                                      [/bin/echo]	close(31)
                                      [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                      [/bin/echo]	exec(/bin/echo)
[echo ls:]	waitpid(10634) returned
[echo ls:]	echo ls: finished
[echo ls:]	change g_awaited_process from 10634 to 0
[echo ls:]	cmd: 'ls'
[echo ls:]	pipe_parse(ls)
[echo ls:]	cmd[0] = 'ls'
[ls]	exec 0 > ls > 1
[ls]	restore stdin
[ls]	redirect: 0->48
[ls]	restore stdout
[ls]	redirect: 1->49
[ls]	redirect: 0->0
[ls]	redirect: 1->1
[ls]	after replace
'ls'	
[ls]	fork
[ls]	fork_and_exec:	/bin/ls = 10635 launched
[ls]	pipe_exec2 returned: 10635
[ls]	free item: 'ls' (0x52a9b90)
[ls]	waiting ls to finish
[ls]	change g_awaited_process from 0 to 10635
[ls]	wait 10635 to stop
                                       [/bin/ls]	close_g_fd_to_close                                       [/bin/ls]	close(31)
                                       [/bin/ls]	fork_and_exec:	about to launch /bin/ls
                                       [/bin/ls]	exec(/bin/ls)
[ls]	waitpid(10635) returned
[ls]	ls finished
[ls]	change g_awaited_process from 10635 to 0
[ls]	command processed: 'echo ls:;ls'
[ls]	-------------------------
[ls]	
[ls]	
[ls]	-----------------------
[ls]	process command: 'echo not empty dir: ;rm -r "not empty dir ls"; mkdir "not empty dir ls"; mkdir "not empty dir ls"/dir1; touch "not empty dir ls"/file1'
[ls]	quote replaced: 'not empty dir ls' -> '%paired_quote%1'
[ls]	quote replaced: 'not empty dir ls' -> '%paired_quote%2'
[ls]	quote replaced: 'not empty dir ls' -> '%paired_quote%3'
[ls]	quote replaced: 'not empty dir ls' -> '%paired_quote%4'
[ls]	quotes replaced: 'echo not empty dir: ;rm -r %paired_quote%1; mkdir %paired_quote%2; mkdir %paired_quote%3/dir1; touch %paired_quote%4/file1'
[ls]	trimmed = echo not empty dir: ;rm -r %paired_quote%1; mkdir %paired_quote%2; mkdir %paired_quote%3/dir1; touch %paired_quote%4/file1
[ls]	no comments = echo not empty dir: ;rm -r %paired_quote%1; mkdir %paired_quote%2; mkdir %paired_quote%3/dir1; touch %paired_quote%4/file1
[ls]	cmd: 'echo not empty dir: '
[ls]	pipe_parse(echo not empty dir:)
[ls]	cmd[0] = 'echo not empty dir:'
[echo not empty dir:]	exec 0 > echo not empty dir: > 1
[echo not empty dir:]	restore stdin
[echo not empty dir:]	redirect: 0->48
[echo not empty dir:]	restore stdout
[echo not empty dir:]	redirect: 1->49
[echo not empty dir:]	redirect: 0->0
[echo not empty dir:]	redirect: 1->1
[echo not empty dir:]	after replace
'echo'	'not'	'empty'	'dir:'	
[echo not empty dir:]	fork
[echo not empty dir:]	fork_and_exec:	/bin/echo = 10636 launched
[echo not empty dir:]	pipe_exec2 returned: 10636
[echo not empty dir:]	free item: 'echo not empty dir:' (0x52aacf0)
[echo not empty dir:]	waiting echo not empty dir: to finish
[echo not empty dir:]	change g_awaited_process from 0 to 10636
[echo not empty dir:]	wait 10636 to stop
                                        [/bin/echo]	close_g_fd_to_close                                        [/bin/echo]	close(31)
                                        [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                        [/bin/echo]	exec(/bin/echo)
[echo not empty dir:]	waitpid(10636) returned
[echo not empty dir:]	echo not empty dir: finished
[echo not empty dir:]	change g_awaited_process from 10636 to 0
[echo not empty dir:]	cmd: 'rm -r %paired_quote%1'
[echo not empty dir:]	pipe_parse(rm -r %paired_quote%1)
[echo not empty dir:]	cmd[0] = 'rm -r %paired_quote%1'
[rm -r %paired_quote%1]	exec 0 > rm -r %paired_quote%1 > 1
[rm -r %paired_quote%1]	restore stdin
[rm -r %paired_quote%1]	redirect: 0->48
[rm -r %paired_quote%1]	restore stdout
[rm -r %paired_quote%1]	redirect: 1->49
[rm -r %paired_quote%1]	redirect: 0->0
[rm -r %paired_quote%1]	redirect: 1->1
[rm -r %paired_quote%1]	after replace
'rm'	'-r'	'not empty dir ls'	
[rm -r %paired_quote%1]	fork
[rm -r %paired_quote%1]	fork_and_exec:	/bin/rm = 10637 launched
[rm -r %paired_quote%1]	pipe_exec2 returned: 10637
[rm -r %paired_quote%1]	free item: 'rm -r %paired_quote%1' (0x52ab610)
[rm -r %paired_quote%1]	waiting rm -r %paired_quote%1 to finish
[rm -r %paired_quote%1]	change g_awaited_process from 0 to 10637
[rm -r %paired_quote%1]	wait 10637 to stop
                                         [/bin/rm]	close_g_fd_to_close                                         [/bin/rm]	close(31)
                                         [/bin/rm]	fork_and_exec:	about to launch /bin/rm
                                         [/bin/rm]	exec(/bin/rm)
[rm -r %paired_quote%1]	waitpid(10637) returned
[rm -r %paired_quote%1]	rm -r %paired_quote%1 finished
[rm -r %paired_quote%1]	change g_awaited_process from 10637 to 0
[rm -r %paired_quote%1]	cmd: ' mkdir %paired_quote%2'
[rm -r %paired_quote%1]	pipe_parse(mkdir %paired_quote%2)
[rm -r %paired_quote%1]	cmd[0] = 'mkdir %paired_quote%2'
[mkdir %paired_quote%2]	exec 0 > mkdir %paired_quote%2 > 1
[mkdir %paired_quote%2]	restore stdin
[mkdir %paired_quote%2]	redirect: 0->48
[mkdir %paired_quote%2]	restore stdout
[mkdir %paired_quote%2]	redirect: 1->49
[mkdir %paired_quote%2]	redirect: 0->0
[mkdir %paired_quote%2]	redirect: 1->1
[mkdir %paired_quote%2]	after replace
'mkdir'	'not empty dir ls'	
[mkdir %paired_quote%2]	fork
[mkdir %paired_quote%2]	fork_and_exec:	/bin/mkdir = 10638 launched
[mkdir %paired_quote%2]	pipe_exec2 returned: 10638
[mkdir %paired_quote%2]	free item: 'mkdir %paired_quote%2' (0x52abeb0)
[mkdir %paired_quote%2]	waiting mkdir %paired_quote%2 to finish
[mkdir %paired_quote%2]	change g_awaited_process from 0 to 10638
[mkdir %paired_quote%2]	wait 10638 to stop
                                          [/bin/mkdir]	close_g_fd_to_close                                          [/bin/mkdir]	close(31)
                                          [/bin/mkdir]	fork_and_exec:	about to launch /bin/mkdir
                                          [/bin/mkdir]	exec(/bin/mkdir)
[mkdir %paired_quote%2]	waitpid(10638) returned
[mkdir %paired_quote%2]	mkdir %paired_quote%2 finished
[mkdir %paired_quote%2]	change g_awaited_process from 10638 to 0
[mkdir %paired_quote%2]	cmd: ' mkdir %paired_quote%3/dir1'
[mkdir %paired_quote%2]	pipe_parse(mkdir %paired_quote%3/dir1)
[mkdir %paired_quote%2]	cmd[0] = 'mkdir %paired_quote%3/dir1'
[mkdir %paired_quote%3/dir1]	exec 0 > mkdir %paired_quote%3/dir1 > 1
[mkdir %paired_quote%3/dir1]	restore stdin
[mkdir %paired_quote%3/dir1]	redirect: 0->48
[mkdir %paired_quote%3/dir1]	restore stdout
[mkdir %paired_quote%3/dir1]	redirect: 1->49
[mkdir %paired_quote%3/dir1]	redirect: 0->0
[mkdir %paired_quote%3/dir1]	redirect: 1->1
[mkdir %paired_quote%3/dir1]	after replace
'mkdir'	'not empty dir ls/dir1'	
[mkdir %paired_quote%3/dir1]	fork
[mkdir %paired_quote%3/dir1]	fork_and_exec:	/bin/mkdir = 10639 launched
[mkdir %paired_quote%3/dir1]	pipe_exec2 returned: 10639
[mkdir %paired_quote%3/dir1]	free item: 'mkdir %paired_quote%3/dir1' (0x52ac650)
[mkdir %paired_quote%3/dir1]	waiting mkdir %paired_quote%3/dir1 to finish
[mkdir %paired_quote%3/dir1]	change g_awaited_process from 0 to 10639
[mkdir %paired_quote%3/dir1]	wait 10639 to stop
                                           [/bin/mkdir]	close_g_fd_to_close                                           [/bin/mkdir]	close(31)
                                           [/bin/mkdir]	fork_and_exec:	about to launch /bin/mkdir
                                           [/bin/mkdir]	exec(/bin/mkdir)
[mkdir %paired_quote%3/dir1]	waitpid(10639) returned
[mkdir %paired_quote%3/dir1]	mkdir %paired_quote%3/dir1 finished
[mkdir %paired_quote%3/dir1]	change g_awaited_process from 10639 to 0
[mkdir %paired_quote%3/dir1]	cmd: ' touch %paired_quote%4/file1'
[mkdir %paired_quote%3/dir1]	pipe_parse(touch %paired_quote%4/file1)
[mkdir %paired_quote%3/dir1]	cmd[0] = 'touch %paired_quote%4/file1'
[touch %paired_quote%4/file1]	exec 0 > touch %paired_quote%4/file1 > 1
[touch %paired_quote%4/file1]	restore stdin
[touch %paired_quote%4/file1]	redirect: 0->48
[touch %paired_quote%4/file1]	restore stdout
[touch %paired_quote%4/file1]	redirect: 1->49
[touch %paired_quote%4/file1]	redirect: 0->0
[touch %paired_quote%4/file1]	redirect: 1->1
[touch %paired_quote%4/file1]	after replace
'touch'	'not empty dir ls/file1'	
[touch %paired_quote%4/file1]	fork
[touch %paired_quote%4/file1]	fork_and_exec:	/bin/touch = 10640 launched
[touch %paired_quote%4/file1]	pipe_exec2 returned: 10640
[touch %paired_quote%4/file1]	free item: 'touch %paired_quote%4/file1' (0x52ace10)
[touch %paired_quote%4/file1]	waiting touch %paired_quote%4/file1 to finish
[touch %paired_quote%4/file1]	change g_awaited_process from 0 to 10640
[touch %paired_quote%4/file1]	wait 10640 to stop
                                            [/bin/touch]	close_g_fd_to_close                                            [/bin/touch]	close(31)
                                            [/bin/touch]	fork_and_exec:	about to launch /bin/touch
                                            [/bin/touch]	exec(/bin/touch)
[touch %paired_quote%4/file1]	waitpid(10640) returned
[touch %paired_quote%4/file1]	touch %paired_quote%4/file1 finished
[touch %paired_quote%4/file1]	change g_awaited_process from 10640 to 0
[touch %paired_quote%4/file1]	command processed: 'echo not empty dir: ;rm -r "not empty dir ls"; mkdir "not empty dir ls"; mkdir "not empty dir ls"/dir1; touch "not empty dir ls"/file1'
[touch %paired_quote%4/file1]	-------------------------
[touch %paired_quote%4/file1]	
[touch %paired_quote%4/file1]	
[touch %paired_quote%4/file1]	-----------------------
[touch %paired_quote%4/file1]	process command: 'echo ls ;ls "not empty dir ls"'
[touch %paired_quote%4/file1]	quote replaced: 'not empty dir ls' -> '%paired_quote%1'
[touch %paired_quote%4/file1]	quotes replaced: 'echo ls ;ls %paired_quote%1'
[touch %paired_quote%4/file1]	trimmed = echo ls ;ls %paired_quote%1
[touch %paired_quote%4/file1]	no comments = echo ls ;ls %paired_quote%1
[touch %paired_quote%4/file1]	cmd: 'echo ls '
[touch %paired_quote%4/file1]	pipe_parse(echo ls)
[touch %paired_quote%4/file1]	cmd[0] = 'echo ls'
[echo ls]	exec 0 > echo ls > 1
[echo ls]	restore stdin
[echo ls]	redirect: 0->48
[echo ls]	restore stdout
[echo ls]	redirect: 1->49
[echo ls]	redirect: 0->0
[echo ls]	redirect: 1->1
[echo ls]	after replace
'echo'	'ls'	
[echo ls]	fork
[echo ls]	fork_and_exec:	/bin/echo = 10641 launched
[echo ls]	pipe_exec2 returned: 10641
[echo ls]	free item: 'echo ls' (0x52ad9d0)
[echo ls]	waiting echo ls to finish
[echo ls]	change g_awaited_process from 0 to 10641
[echo ls]	wait 10641 to stop
                                             [/bin/echo]	close_g_fd_to_close                                             [/bin/echo]	close(31)
                                             [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                             [/bin/echo]	exec(/bin/echo)
[echo ls]	waitpid(10641) returned
[echo ls]	echo ls finished
[echo ls]	change g_awaited_process from 10641 to 0
[echo ls]	cmd: 'ls %paired_quote%1'
[echo ls]	pipe_parse(ls %paired_quote%1)
[echo ls]	cmd[0] = 'ls %paired_quote%1'
[ls %paired_quote%1]	exec 0 > ls %paired_quote%1 > 1
[ls %paired_quote%1]	restore stdin
[ls %paired_quote%1]	redirect: 0->48
[ls %paired_quote%1]	restore stdout
[ls %paired_quote%1]	redirect: 1->49
[ls %paired_quote%1]	redirect: 0->0
[ls %paired_quote%1]	redirect: 1->1
[ls %paired_quote%1]	after replace
'ls'	'not empty dir ls'	
[ls %paired_quote%1]	fork
[ls %paired_quote%1]	fork_and_exec:	/bin/ls = 10642 launched
[ls %paired_quote%1]	pipe_exec2 returned: 10642
[ls %paired_quote%1]	free item: 'ls %paired_quote%1' (0x52adfc0)
[ls %paired_quote%1]	waiting ls %paired_quote%1 to finish
[ls %paired_quote%1]	change g_awaited_process from 0 to 10642
[ls %paired_quote%1]	wait 10642 to stop
                                              [/bin/ls]	close_g_fd_to_close                                              [/bin/ls]	close(31)
                                              [/bin/ls]	fork_and_exec:	about to launch /bin/ls
                                              [/bin/ls]	exec(/bin/ls)
[ls %paired_quote%1]	waitpid(10642) returned
[ls %paired_quote%1]	ls %paired_quote%1 finished
[ls %paired_quote%1]	change g_awaited_process from 10642 to 0
[ls %paired_quote%1]	command processed: 'echo ls ;ls "not empty dir ls"'
[ls %paired_quote%1]	-------------------------
[ls %paired_quote%1]	
[test]	close(1)
[test]	
[test]	-----------------------
[test]	process command: 'setenv HOME fake_home_for_tests'
[test]	quotes replaced: 'setenv HOME fake_home_for_tests'
[test]	trimmed = setenv HOME fake_home_for_tests
[test]	no comments = setenv HOME fake_home_for_tests
[test]	cmd: 'setenv HOME fake_home_for_tests'
[test]	pipe_parse(setenv HOME fake_home_for_tests)
[test]	cmd[0] = 'setenv HOME fake_home_for_tests'
[setenv HOME fake_home_for_tests]	exec 0 > setenv HOME fake_home_for_tests > 1
[setenv HOME fake_home_for_tests]	restore stdin
[setenv HOME fake_home_for_tests]	redirect: 0->48
[setenv HOME fake_home_for_tests]	restore stdout
[setenv HOME fake_home_for_tests]	redirect: 1->49
[setenv HOME fake_home_for_tests]	redirect: 0->0
[setenv HOME fake_home_for_tests]	redirect: 1->1
[setenv HOME fake_home_for_tests]	after replace
'setenv'	'HOME'	'fake_home_for_tests'	
[setenv HOME fake_home_for_tests]	pipe_exec2 returned: 0
[setenv HOME fake_home_for_tests]	free item: 'setenv HOME fake_home_for_tests' (0x52b4440)
[setenv HOME fake_home_for_tests]	command processed: 'setenv HOME fake_home_for_tests'
[setenv HOME fake_home_for_tests]	-------------------------
[setenv HOME fake_home_for_tests]	
[test]	testing echo_home
[test]	duplicated stdin to 51
[test]	duplicated stdout to 52
[test]	
[test]	-----------------------
[test]	process command: 'echo $HOME'
[test]	quotes replaced: 'echo $HOME'
[test]	trimmed = echo $HOME
[test]	no comments = echo $HOME
[test]	cmd: 'echo $HOME'
[test]	pipe_parse(echo $HOME)
[test]	cmd[0] = 'echo $HOME'
[echo $HOME]	exec 0 > echo $HOME > 1
[echo $HOME]	restore stdin
[echo $HOME]	redirect: 0->51
[echo $HOME]	restore stdout
[echo $HOME]	redirect: 1->52
[echo $HOME]	redirect: 0->0
[echo $HOME]	redirect: 1->1
[echo $HOME]	after replace
'echo'	'fake_home_for_tests'	
[echo $HOME]	fork
[echo $HOME]	fork_and_exec:	/bin/echo = 10643 launched
[echo $HOME]	pipe_exec2 returned: 10643
[echo $HOME]	free item: 'echo $HOME' (0x52b4ef0)
[echo $HOME]	waiting echo $HOME to finish
[echo $HOME]	change g_awaited_process from 0 to 10643
[echo $HOME]	wait 10643 to stop
                                               [/bin/echo]	close_g_fd_to_close                                               [/bin/echo]	close(31)
                                               [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                               [/bin/echo]	exec(/bin/echo)
[echo $HOME]	waitpid(10643) returned
[echo $HOME]	echo $HOME finished
[echo $HOME]	change g_awaited_process from 10643 to 0
[echo $HOME]	command processed: 'echo $HOME'
[echo $HOME]	-------------------------
[echo $HOME]	
[test]	close(1)
[test]	testing echo_tilde
[test]	duplicated stdin to 54
[test]	duplicated stdout to 55
[test]	
[test]	-----------------------
[test]	process command: 'echo ~'
[test]	quotes replaced: 'echo ~'
[test]	trimmed = echo ~
[test]	no comments = echo ~
[test]	cmd: 'echo ~'
[test]	pipe_parse(echo ~)
[test]	cmd[0] = 'echo ~'
[echo ~]	exec 0 > echo ~ > 1
[echo ~]	restore stdin
[echo ~]	redirect: 0->54
[echo ~]	restore stdout
[echo ~]	redirect: 1->55
[echo ~]	redirect: 0->0
[echo ~]	redirect: 1->1
[echo ~]	after replace
'echo'	'fake_home_for_tests'	
[echo ~]	fork
[echo ~]	fork_and_exec:	/bin/echo = 10644 launched
[echo ~]	pipe_exec2 returned: 10644
[echo ~]	free item: 'echo ~' (0x52bb390)
[echo ~]	waiting echo ~ to finish
[echo ~]	change g_awaited_process from 0 to 10644
[echo ~]	wait 10644 to stop
                                                [/bin/echo]	close_g_fd_to_close                                                [/bin/echo]	close(31)
                                                [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                [/bin/echo]	exec(/bin/echo)
[echo ~]	waitpid(10644) returned
[echo ~]	echo ~ finished
[echo ~]	change g_awaited_process from 10644 to 0
[echo ~]	command processed: 'echo ~'
[echo ~]	-------------------------
[echo ~]	
[test]	close(1)
[test]	
[test]	-----------------------
[test]	process command: 'setenv HOME /home/darugula'
[test]	quotes replaced: 'setenv HOME /home/darugula'
[test]	trimmed = setenv HOME /home/darugula
[test]	no comments = setenv HOME /home/darugula
[test]	cmd: 'setenv HOME /home/darugula'
[test]	pipe_parse(setenv HOME /home/darugula)
[test]	cmd[0] = 'setenv HOME /home/darugula'
[setenv HOME /home/darugula]	exec 0 > setenv HOME /home/darugula > 1
[setenv HOME /home/darugula]	restore stdin
[setenv HOME /home/darugula]	redirect: 0->54
[setenv HOME /home/darugula]	restore stdout
[setenv HOME /home/darugula]	redirect: 1->55
[setenv HOME /home/darugula]	redirect: 0->0
[setenv HOME /home/darugula]	redirect: 1->1
[setenv HOME /home/darugula]	after replace
'setenv'	'HOME'	'/home/darugula'	
[setenv HOME /home/darugula]	pipe_exec2 returned: 0
[setenv HOME /home/darugula]	free item: 'setenv HOME /home/darugula' (0x52c16c0)
[setenv HOME /home/darugula]	command processed: 'setenv HOME /home/darugula'
[setenv HOME /home/darugula]	-------------------------
[setenv HOME /home/darugula]	
[test]	testing echo_three_args
[test]	duplicated stdin to 57
[test]	duplicated stdout to 58
[test]	
[test]	-----------------------
[test]	process command: 'echo 1 2 3'
[test]	quotes replaced: 'echo 1 2 3'
[test]	trimmed = echo 1 2 3
[test]	no comments = echo 1 2 3
[test]	cmd: 'echo 1 2 3'
[test]	pipe_parse(echo 1 2 3)
[test]	cmd[0] = 'echo 1 2 3'
[echo 1 2 3]	exec 0 > echo 1 2 3 > 1
[echo 1 2 3]	restore stdin
[echo 1 2 3]	redirect: 0->57
[echo 1 2 3]	restore stdout
[echo 1 2 3]	redirect: 1->58
[echo 1 2 3]	redirect: 0->0
[echo 1 2 3]	redirect: 1->1
[echo 1 2 3]	after replace
'echo'	'1'	'2'	'3'	
[echo 1 2 3]	fork
[echo 1 2 3]	fork_and_exec:	/bin/echo = 10645 launched
[echo 1 2 3]	pipe_exec2 returned: 10645
[echo 1 2 3]	free item: 'echo 1 2 3' (0x52c2140)
[echo 1 2 3]	waiting echo 1 2 3 to finish
[echo 1 2 3]	change g_awaited_process from 0 to 10645
[echo 1 2 3]	wait 10645 to stop
                                                 [/bin/echo]	close_g_fd_to_close                                                 [/bin/echo]	close(31)
                                                 [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                 [/bin/echo]	exec(/bin/echo)
[echo 1 2 3]	waitpid(10645) returned
[echo 1 2 3]	echo 1 2 3 finished
[echo 1 2 3]	change g_awaited_process from 10645 to 0
[echo 1 2 3]	command processed: 'echo 1 2 3'
[echo 1 2 3]	-------------------------
[echo 1 2 3]	
[test]	close(1)
[test]	testing comment_ignored
[test]	duplicated stdin to 60
[test]	duplicated stdout to 61
[test]	close(1)
[test]	duplicated stdin to 63
[test]	duplicated stdout to 64
[test]	
[test]	-----------------------
[test]	process command: '#pwd'
[test]	quotes replaced: '#pwd'
[test]	trimmed = #pwd
[test]	no comments = 
[test]	
[test]	-----------------------
[test]	process command: 'pwd #'
[test]	quotes replaced: 'pwd #'
[test]	trimmed = pwd #
[test]	no comments = pwd 
[test]	cmd: 'pwd '
[test]	pipe_parse(pwd)
[test]	cmd[0] = 'pwd'
[pwd]	exec 0 > pwd > 1
[pwd]	restore stdin
[pwd]	redirect: 0->63
[pwd]	restore stdout
[pwd]	redirect: 1->64
[pwd]	redirect: 0->0
[pwd]	redirect: 1->1
[pwd]	after replace
'pwd'	
[pwd]	fork
[pwd]	fork_and_exec:	/bin/pwd = 10648 launched
[pwd]	pipe_exec2 returned: 10648
[pwd]	free item: 'pwd' (0x52c88d0)
[pwd]	waiting pwd to finish
[pwd]	change g_awaited_process from 0 to 10648
[pwd]	wait 10648 to stop
                                                    [/bin/pwd]	close_g_fd_to_close                                                    [/bin/pwd]	close(31)
                                                    [/bin/pwd]	fork_and_exec:	about to launch /bin/pwd
                                                    [/bin/pwd]	exec(/bin/pwd)
[pwd]	waitpid(10648) returned
[pwd]	pwd finished
[pwd]	change g_awaited_process from 10648 to 0
[pwd]	command processed: 'pwd #'
[pwd]	-------------------------
[pwd]	
[test]	close(1)
[test]	testing comment_ignored_bad
[test]	duplicated stdin to 66
[test]	duplicated stdout to 67
[test]	
[test]	-----------------------
[test]	process command: 'pwd#'
[test]	quotes replaced: 'pwd#'
[test]	trimmed = pwd#
[test]	no comments = pwd#
[test]	cmd: 'pwd#'
[test]	pipe_parse(pwd#)
[test]	cmd[0] = 'pwd#'
[pwd#]	exec 0 > pwd# > 1
[pwd#]	restore stdin
[pwd#]	redirect: 0->66
[pwd#]	restore stdout
[pwd#]	redirect: 1->67
[pwd#]	redirect: 0->0
[pwd#]	redirect: 1->1
[pwd#]	after replace
'pwd#'	
[pwd#]	pwd#: command not found
[pwd#]	pipe_exec2 returned: 0
[pwd#]	free item: 'pwd#' (0x52cec70)
[pwd#]	command processed: 'pwd#'
[pwd#]	-------------------------
[pwd#]	
[test]	close(1)
[test]	testing two_commands_good
[test]	duplicated stdin to 69
[test]	duplicated stdout to 70
[test]	
[test]	-----------------------
[test]	process command: 'echo echo1;;echo echo2'
[test]	quotes replaced: 'echo echo1;;echo echo2'
[test]	trimmed = echo echo1;;echo echo2
[test]	no comments = echo echo1;;echo echo2
[test]	cmd: 'echo echo1'
[test]	pipe_parse(echo echo1)
[test]	cmd[0] = 'echo echo1'
[echo echo1]	exec 0 > echo echo1 > 1
[echo echo1]	restore stdin
[echo echo1]	redirect: 0->69
[echo echo1]	restore stdout
[echo echo1]	redirect: 1->70
[echo echo1]	redirect: 0->0
[echo echo1]	redirect: 1->1
[echo echo1]	after replace
'echo'	'echo1'	
[echo echo1]	fork
[echo echo1]	fork_and_exec:	/bin/echo = 10649 launched
[echo echo1]	pipe_exec2 returned: 10649
[echo echo1]	free item: 'echo echo1' (0x52d5110)
[echo echo1]	waiting echo echo1 to finish
[echo echo1]	change g_awaited_process from 0 to 10649
[echo echo1]	wait 10649 to stop
                                                     [/bin/echo]	close_g_fd_to_close                                                     [/bin/echo]	close(31)
                                                     [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                     [/bin/echo]	exec(/bin/echo)
[echo echo1]	waitpid(10649) returned
[echo echo1]	echo echo1 finished
[echo echo1]	change g_awaited_process from 10649 to 0
[echo echo1]	cmd: 'echo echo2'
[echo echo1]	pipe_parse(echo echo2)
[echo echo1]	cmd[0] = 'echo echo2'
[echo echo2]	exec 0 > echo echo2 > 1
[echo echo2]	restore stdin
[echo echo2]	redirect: 0->69
[echo echo2]	restore stdout
[echo echo2]	redirect: 1->70
[echo echo2]	redirect: 0->0
[echo echo2]	redirect: 1->1
[echo echo2]	after replace
'echo'	'echo2'	
[echo echo2]	fork
[echo echo2]	fork_and_exec:	/bin/echo = 10650 launched
[echo echo2]	pipe_exec2 returned: 10650
[echo echo2]	free item: 'echo echo2' (0x52d5690)
[echo echo2]	waiting echo echo2 to finish
[echo echo2]	change g_awaited_process from 0 to 10650
[echo echo2]	wait 10650 to stop
                                                      [/bin/echo]	close_g_fd_to_close                                                      [/bin/echo]	close(31)
                                                      [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                      [/bin/echo]	exec(/bin/echo)
[echo echo2]	waitpid(10650) returned
[echo echo2]	echo echo2 finished
[echo echo2]	change g_awaited_process from 10650 to 0
[echo echo2]	command processed: 'echo echo1;;echo echo2'
[echo echo2]	-------------------------
[echo echo2]	
[echo echo2]	
[echo echo2]	-----------------------
[echo echo2]	process command: 'echo echo3;#;echo echo4'
[echo echo2]	quotes replaced: 'echo echo3;#;echo echo4'
[echo echo2]	trimmed = echo echo3;#;echo echo4
[echo echo2]	no comments = echo echo3;
[echo echo2]	cmd: 'echo echo3'
[echo echo2]	pipe_parse(echo echo3)
[echo echo2]	cmd[0] = 'echo echo3'
[echo echo3]	exec 0 > echo echo3 > 1
[echo echo3]	restore stdin
[echo echo3]	redirect: 0->69
[echo echo3]	restore stdout
[echo echo3]	redirect: 1->70
[echo echo3]	redirect: 0->0
[echo echo3]	redirect: 1->1
[echo echo3]	after replace
'echo'	'echo3'	
[echo echo3]	fork
[echo echo3]	fork_and_exec:	/bin/echo = 10651 launched
[echo echo3]	pipe_exec2 returned: 10651
[echo echo3]	free item: 'echo echo3' (0x52d5dd0)
[echo echo3]	waiting echo echo3 to finish
[echo echo3]	change g_awaited_process from 0 to 10651
[echo echo3]	wait 10651 to stop
                                                       [/bin/echo]	close_g_fd_to_close                                                       [/bin/echo]	close(31)
                                                       [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                       [/bin/echo]	exec(/bin/echo)
[echo echo3]	waitpid(10651) returned
[echo echo3]	echo echo3 finished
[echo echo3]	change g_awaited_process from 10651 to 0
[echo echo3]	command processed: 'echo echo3;#;echo echo4'
[echo echo3]	-------------------------
[echo echo3]	
[echo echo3]	
[echo echo3]	-----------------------
[echo echo3]	process command: 'echo echo5;echo echo6'
[echo echo3]	quotes replaced: 'echo echo5;echo echo6'
[echo echo3]	trimmed = echo echo5;echo echo6
[echo echo3]	no comments = echo echo5;echo echo6
[echo echo3]	cmd: 'echo echo5'
[echo echo3]	pipe_parse(echo echo5)
[echo echo3]	cmd[0] = 'echo echo5'
[echo echo5]	exec 0 > echo echo5 > 1
[echo echo5]	restore stdin
[echo echo5]	redirect: 0->69
[echo echo5]	restore stdout
[echo echo5]	redirect: 1->70
[echo echo5]	redirect: 0->0
[echo echo5]	redirect: 1->1
[echo echo5]	after replace
'echo'	'echo5'	
[echo echo5]	fork
[echo echo5]	fork_and_exec:	/bin/echo = 10652 launched
[echo echo5]	pipe_exec2 returned: 10652
[echo echo5]	free item: 'echo echo5' (0x52d6590)
[echo echo5]	waiting echo echo5 to finish
[echo echo5]	change g_awaited_process from 0 to 10652
[echo echo5]	wait 10652 to stop
                                                        [/bin/echo]	close_g_fd_to_close                                                        [/bin/echo]	close(31)
                                                        [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                        [/bin/echo]	exec(/bin/echo)
[echo echo5]	waitpid(10652) returned
[echo echo5]	echo echo5 finished
[echo echo5]	change g_awaited_process from 10652 to 0
[echo echo5]	cmd: 'echo echo6'
[echo echo5]	pipe_parse(echo echo6)
[echo echo5]	cmd[0] = 'echo echo6'
[echo echo6]	exec 0 > echo echo6 > 1
[echo echo6]	restore stdin
[echo echo6]	redirect: 0->69
[echo echo6]	restore stdout
[echo echo6]	redirect: 1->70
[echo echo6]	redirect: 0->0
[echo echo6]	redirect: 1->1
[echo echo6]	after replace
'echo'	'echo6'	
[echo echo6]	fork
[echo echo6]	fork_and_exec:	/bin/echo = 10653 launched
[echo echo6]	pipe_exec2 returned: 10653
[echo echo6]	free item: 'echo echo6' (0x52d6b10)
[echo echo6]	waiting echo echo6 to finish
[echo echo6]	change g_awaited_process from 0 to 10653
[echo echo6]	wait 10653 to stop
                                                         [/bin/echo]	close_g_fd_to_close                                                         [/bin/echo]	close(31)
                                                         [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                         [/bin/echo]	exec(/bin/echo)
[echo echo6]	waitpid(10653) returned
[echo echo6]	echo echo6 finished
[echo echo6]	change g_awaited_process from 10653 to 0
[echo echo6]	command processed: 'echo echo5;echo echo6'
[echo echo6]	-------------------------
[echo echo6]	
[echo echo6]	
[echo echo6]	-----------------------
[echo echo6]	process command: 'echo echo7;echo echo8'
[echo echo6]	quotes replaced: 'echo echo7;echo echo8'
[echo echo6]	trimmed = echo echo7;echo echo8
[echo echo6]	no comments = echo echo7;echo echo8
[echo echo6]	cmd: 'echo echo7'
[echo echo6]	pipe_parse(echo echo7)
[echo echo6]	cmd[0] = 'echo echo7'
[echo echo7]	exec 0 > echo echo7 > 1
[echo echo7]	restore stdin
[echo echo7]	redirect: 0->69
[echo echo7]	restore stdout
[echo echo7]	redirect: 1->70
[echo echo7]	redirect: 0->0
[echo echo7]	redirect: 1->1
[echo echo7]	after replace
'echo'	'echo7'	
[echo echo7]	fork
[echo echo7]	fork_and_exec:	/bin/echo = 10654 launched
[echo echo7]	pipe_exec2 returned: 10654
[echo echo7]	free item: 'echo echo7' (0x52d72d0)
[echo echo7]	waiting echo echo7 to finish
[echo echo7]	change g_awaited_process from 0 to 10654
[echo echo7]	wait 10654 to stop
                                                          [/bin/echo]	close_g_fd_to_close                                                          [/bin/echo]	close(31)
                                                          [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                          [/bin/echo]	exec(/bin/echo)
[echo echo7]	waitpid(10654) returned
[echo echo7]	echo echo7 finished
[echo echo7]	change g_awaited_process from 10654 to 0
[echo echo7]	cmd: 'echo echo8'
[echo echo7]	pipe_parse(echo echo8)
[echo echo7]	cmd[0] = 'echo echo8'
[echo echo8]	exec 0 > echo echo8 > 1
[echo echo8]	restore stdin
[echo echo8]	redirect: 0->69
[echo echo8]	restore stdout
[echo echo8]	redirect: 1->70
[echo echo8]	redirect: 0->0
[echo echo8]	redirect: 1->1
[echo echo8]	after replace
'echo'	'echo8'	
[echo echo8]	fork
[echo echo8]	fork_and_exec:	/bin/echo = 10655 launched
[echo echo8]	pipe_exec2 returned: 10655
[echo echo8]	free item: 'echo echo8' (0x52d7850)
[echo echo8]	waiting echo echo8 to finish
[echo echo8]	change g_awaited_process from 0 to 10655
[echo echo8]	wait 10655 to stop
                                                           [/bin/echo]	close_g_fd_to_close                                                           [/bin/echo]	close(31)
                                                           [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                           [/bin/echo]	exec(/bin/echo)
[echo echo8]	waitpid(10655) returned
[echo echo8]	echo echo8 finished
[echo echo8]	change g_awaited_process from 10655 to 0
[echo echo8]	command processed: 'echo echo7;echo echo8'
[echo echo8]	-------------------------
[echo echo8]	
[test]	close(1)
[test]	testing cd_good
[test]	duplicated stdin to 72
[test]	duplicated stdout to 73
[test]	close(1)
[test]	duplicated stdin to 75
[test]	duplicated stdout to 76
[test]	
[test]	-----------------------
[test]	process command: 'pwd'
[test]	quotes replaced: 'pwd'
[test]	trimmed = pwd
[test]	no comments = pwd
[test]	cmd: 'pwd'
[test]	pipe_parse(pwd)
[test]	cmd[0] = 'pwd'
[pwd]	exec 0 > pwd > 1
[pwd]	restore stdin
[pwd]	redirect: 0->75
[pwd]	restore stdout
[pwd]	redirect: 1->76
[pwd]	redirect: 0->0
[pwd]	redirect: 1->1
[pwd]	after replace
'pwd'	
[pwd]	fork
[pwd]	fork_and_exec:	/bin/pwd = 10657 launched
[pwd]	pipe_exec2 returned: 10657
[pwd]	free item: 'pwd' (0x52ddcf0)
[pwd]	waiting pwd to finish
[pwd]	change g_awaited_process from 0 to 10657
[pwd]	wait 10657 to stop
                                                             [/bin/pwd]	close_g_fd_to_close                                                             [/bin/pwd]	close(31)
                                                             [/bin/pwd]	fork_and_exec:	about to launch /bin/pwd
                                                             [/bin/pwd]	exec(/bin/pwd)
[pwd]	waitpid(10657) returned
[pwd]	pwd finished
[pwd]	change g_awaited_process from 10657 to 0
[pwd]	command processed: 'pwd'
[pwd]	-------------------------
[pwd]	
[test]	close(1)
[test]	
[test]	-----------------------
[test]	process command: 'setenv LD_PRELOAD ""'
[test]	quote replaced: '' -> '%paired_quote%1'
[test]	quotes replaced: 'setenv LD_PRELOAD %paired_quote%1'
[test]	trimmed = setenv LD_PRELOAD %paired_quote%1
[test]	no comments = setenv LD_PRELOAD %paired_quote%1
[test]	cmd: 'setenv LD_PRELOAD %paired_quote%1'
[test]	pipe_parse(setenv LD_PRELOAD %paired_quote%1)
[test]	cmd[0] = 'setenv LD_PRELOAD %paired_quote%1'
[setenv LD_PRELOAD %paired_quote%1]	exec 0 > setenv LD_PRELOAD %paired_quote%1 > 1
[setenv LD_PRELOAD %paired_quote%1]	restore stdin
[setenv LD_PRELOAD %paired_quote%1]	redirect: 0->75
[setenv LD_PRELOAD %paired_quote%1]	restore stdout
[setenv LD_PRELOAD %paired_quote%1]	redirect: 1->76
[setenv LD_PRELOAD %paired_quote%1]	redirect: 0->0
[setenv LD_PRELOAD %paired_quote%1]	redirect: 1->1
[setenv LD_PRELOAD %paired_quote%1]	after replace
'setenv'	'LD_PRELOAD'	''	
[setenv LD_PRELOAD %paired_quote%1]	pipe_exec2 returned: 0
[setenv LD_PRELOAD %paired_quote%1]	free item: 'setenv LD_PRELOAD %paired_quote%1' (0x52e41d0)
[setenv LD_PRELOAD %paired_quote%1]	command processed: 'setenv LD_PRELOAD ""'
[setenv LD_PRELOAD %paired_quote%1]	-------------------------
[setenv LD_PRELOAD %paired_quote%1]	
[test]	testing set_env
[test]	duplicated stdin to 78
[test]	duplicated stdout to 79
[test]	
[test]	-----------------------
[test]	process command: 'env'
[test]	quotes replaced: 'env'
[test]	trimmed = env
[test]	no comments = env
[test]	cmd: 'env'
[test]	pipe_parse(env)
[test]	cmd[0] = 'env'
[env]	exec 0 > env > 1
[env]	restore stdin
[env]	redirect: 0->78
[env]	restore stdout
[env]	redirect: 1->79
[env]	redirect: 0->0
[env]	redirect: 1->1
[env]	after replace
'env'	
[env]	fork
[env]	fork_and_exec:	/usr/bin/env = 10658 launched
[env]	pipe_exec2 returned: 10658
[env]	free item: 'env' (0x52e4e60)
[env]	waiting env to finish
[env]	change g_awaited_process from 0 to 10658
[env]	wait 10658 to stop
                                                              [/usr/bin/env]	close_g_fd_to_close                                                              [/usr/bin/env]	close(31)
                                                              [/usr/bin/env]	fork_and_exec:	about to launch /usr/bin/env
                                                              [/usr/bin/env]	exec(/usr/bin/env)
[env]	waitpid(10658) returned
[env]	env finished
[env]	change g_awaited_process from 10658 to 0
[env]	command processed: 'env'
[env]	-------------------------
[env]	
[env]	
[env]	-----------------------
[env]	process command: 'echo ; echo env finished'
[env]	quotes replaced: 'echo ; echo env finished'
[env]	trimmed = echo ; echo env finished
[env]	no comments = echo ; echo env finished
[env]	cmd: 'echo '
[env]	pipe_parse(echo)
[env]	cmd[0] = 'echo'
[echo]	exec 0 > echo > 1
[echo]	restore stdin
[echo]	redirect: 0->78
[echo]	restore stdout
[echo]	redirect: 1->79
[echo]	redirect: 0->0
[echo]	redirect: 1->1
[echo]	after replace
'echo'	
[echo]	fork
[echo]	fork_and_exec:	/bin/echo = 10659 launched
[echo]	pipe_exec2 returned: 10659
[echo]	free item: 'echo' (0x52e5530)
[echo]	waiting echo to finish
[echo]	change g_awaited_process from 0 to 10659
[echo]	wait 10659 to stop
                                                               [/bin/echo]	close_g_fd_to_close                                                               [/bin/echo]	close(31)
                                                               [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                               [/bin/echo]	exec(/bin/echo)
[echo]	waitpid(10659) returned
[echo]	echo finished
[echo]	change g_awaited_process from 10659 to 0
[echo]	cmd: ' echo env finished'
[echo]	pipe_parse(echo env finished)
[echo]	cmd[0] = 'echo env finished'
[echo env finished]	exec 0 > echo env finished > 1
[echo env finished]	restore stdin
[echo env finished]	redirect: 0->78
[echo env finished]	restore stdout
[echo env finished]	redirect: 1->79
[echo env finished]	redirect: 0->0
[echo env finished]	redirect: 1->1
[echo env finished]	after replace
'echo'	'env'	'finished'	
[echo env finished]	fork
[echo env finished]	fork_and_exec:	/bin/echo = 10660 launched
[echo env finished]	pipe_exec2 returned: 10660
[echo env finished]	free item: 'echo env finished' (0x52e59d0)
[echo env finished]	waiting echo env finished to finish
[echo env finished]	change g_awaited_process from 0 to 10660
[echo env finished]	wait 10660 to stop
                                                                [/bin/echo]	close_g_fd_to_close                                                                [/bin/echo]	close(31)
                                                                [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                [/bin/echo]	exec(/bin/echo)
[echo env finished]	waitpid(10660) returned
[echo env finished]	echo env finished finished
[echo env finished]	change g_awaited_process from 10660 to 0
[echo env finished]	command processed: 'echo ; echo env finished'
[echo env finished]	-------------------------
[echo env finished]	
[echo env finished]	
[echo env finished]	-----------------------
[echo env finished]	process command: 'setenv q w'
[echo env finished]	quotes replaced: 'setenv q w'
[echo env finished]	trimmed = setenv q w
[echo env finished]	no comments = setenv q w
[echo env finished]	cmd: 'setenv q w'
[echo env finished]	pipe_parse(setenv q w)
[echo env finished]	cmd[0] = 'setenv q w'
[setenv q w]	exec 0 > setenv q w > 1
[setenv q w]	restore stdin
[setenv q w]	redirect: 0->78
[setenv q w]	restore stdout
[setenv q w]	redirect: 1->79
[setenv q w]	redirect: 0->0
[setenv q w]	redirect: 1->1
[setenv q w]	after replace
'setenv'	'q'	'w'	
[setenv q w]	pipe_exec2 returned: 0
[setenv q w]	free item: 'setenv q w' (0x52e6210)
[setenv q w]	command processed: 'setenv q w'
[setenv q w]	-------------------------
[setenv q w]	
[setenv q w]	
[setenv q w]	-----------------------
[setenv q w]	process command: 'echo ; echo q = $q'
[setenv q w]	quotes replaced: 'echo ; echo q = $q'
[setenv q w]	trimmed = echo ; echo q = $q
[setenv q w]	no comments = echo ; echo q = $q
[setenv q w]	cmd: 'echo '
[setenv q w]	pipe_parse(echo)
[setenv q w]	cmd[0] = 'echo'
[echo]	exec 0 > echo > 1
[echo]	restore stdin
[echo]	redirect: 0->78
[echo]	restore stdout
[echo]	redirect: 1->79
[echo]	redirect: 0->0
[echo]	redirect: 1->1
[echo]	after replace
'echo'	
[echo]	fork
[echo]	fork_and_exec:	/bin/echo = 10661 launched
[echo]	pipe_exec2 returned: 10661
[echo]	free item: 'echo' (0x52e8040)
[echo]	waiting echo to finish
[echo]	change g_awaited_process from 0 to 10661
[echo]	wait 10661 to stop
                                                                 [/bin/echo]	close_g_fd_to_close                                                                 [/bin/echo]	close(31)
                                                                 [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                 [/bin/echo]	exec(/bin/echo)
[echo]	waitpid(10661) returned
[echo]	echo finished
[echo]	change g_awaited_process from 10661 to 0
[echo]	cmd: ' echo q = $q'
[echo]	pipe_parse(echo q = $q)
[echo]	cmd[0] = 'echo q = $q'
[echo q = $q]	exec 0 > echo q = $q > 1
[echo q = $q]	restore stdin
[echo q = $q]	redirect: 0->78
[echo q = $q]	restore stdout
[echo q = $q]	redirect: 1->79
[echo q = $q]	redirect: 0->0
[echo q = $q]	redirect: 1->1
[echo q = $q]	after replace
'echo'	'q'	'='	'w'	
[echo q = $q]	fork
[echo q = $q]	fork_and_exec:	/bin/echo = 10662 launched
[echo q = $q]	pipe_exec2 returned: 10662
[echo q = $q]	free item: 'echo q = $q' (0x52e84c0)
[echo q = $q]	waiting echo q = $q to finish
[echo q = $q]	change g_awaited_process from 0 to 10662
[echo q = $q]	wait 10662 to stop
                                                                  [/bin/echo]	close_g_fd_to_close                                                                  [/bin/echo]	close(31)
                                                                  [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                  [/bin/echo]	exec(/bin/echo)
[echo q = $q]	waitpid(10662) returned
[echo q = $q]	echo q = $q finished
[echo q = $q]	change g_awaited_process from 10662 to 0
[echo q = $q]	command processed: 'echo ; echo q = $q'
[echo q = $q]	-------------------------
[echo q = $q]	
[echo q = $q]	
[echo q = $q]	-----------------------
[echo q = $q]	process command: 'env'
[echo q = $q]	quotes replaced: 'env'
[echo q = $q]	trimmed = env
[echo q = $q]	no comments = env
[echo q = $q]	cmd: 'env'
[echo q = $q]	pipe_parse(env)
[echo q = $q]	cmd[0] = 'env'
[env]	exec 0 > env > 1
[env]	restore stdin
[env]	redirect: 0->78
[env]	restore stdout
[env]	redirect: 1->79
[env]	redirect: 0->0
[env]	redirect: 1->1
[env]	after replace
'env'	
[env]	fork
[env]	fork_and_exec:	/usr/bin/env = 10663 launched
[env]	pipe_exec2 returned: 10663
[env]	free item: 'env' (0x52e8dd0)
[env]	waiting env to finish
[env]	change g_awaited_process from 0 to 10663
[env]	wait 10663 to stop
                                                                   [/usr/bin/env]	close_g_fd_to_close                                                                   [/usr/bin/env]	close(31)
                                                                   [/usr/bin/env]	fork_and_exec:	about to launch /usr/bin/env
                                                                   [/usr/bin/env]	exec(/usr/bin/env)
[env]	waitpid(10663) returned
[env]	env finished
[env]	change g_awaited_process from 10663 to 0
[env]	command processed: 'env'
[env]	-------------------------
[env]	
[env]	
[env]	-----------------------
[env]	process command: 'unsetenv q'
[env]	quotes replaced: 'unsetenv q'
[env]	trimmed = unsetenv q
[env]	no comments = unsetenv q
[env]	cmd: 'unsetenv q'
[env]	pipe_parse(unsetenv q)
[env]	cmd[0] = 'unsetenv q'
[unsetenv q]	exec 0 > unsetenv q > 1
[unsetenv q]	restore stdin
[unsetenv q]	redirect: 0->78
[unsetenv q]	restore stdout
[unsetenv q]	redirect: 1->79
[unsetenv q]	redirect: 0->0
[unsetenv q]	redirect: 1->1
[unsetenv q]	after replace
'unsetenv'	'q'	
[unsetenv q]	pipe_exec2 returned: 0
[unsetenv q]	free item: 'unsetenv q' (0x52e93f0)
[unsetenv q]	command processed: 'unsetenv q'
[unsetenv q]	-------------------------
[unsetenv q]	
[unsetenv q]	
[unsetenv q]	-----------------------
[unsetenv q]	process command: 'echo ; echo q = $q'
[unsetenv q]	quotes replaced: 'echo ; echo q = $q'
[unsetenv q]	trimmed = echo ; echo q = $q
[unsetenv q]	no comments = echo ; echo q = $q
[unsetenv q]	cmd: 'echo '
[unsetenv q]	pipe_parse(echo)
[unsetenv q]	cmd[0] = 'echo'
[echo]	exec 0 > echo > 1
[echo]	restore stdin
[echo]	redirect: 0->78
[echo]	restore stdout
[echo]	redirect: 1->79
[echo]	redirect: 0->0
[echo]	redirect: 1->1
[echo]	after replace
'echo'	
[echo]	fork
[echo]	fork_and_exec:	/bin/echo = 10664 launched
[echo]	pipe_exec2 returned: 10664
[echo]	free item: 'echo' (0x52ea250)
[echo]	waiting echo to finish
[echo]	change g_awaited_process from 0 to 10664
[echo]	wait 10664 to stop
                                                                    [/bin/echo]	close_g_fd_to_close                                                                    [/bin/echo]	close(31)
                                                                    [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                    [/bin/echo]	exec(/bin/echo)
[echo]	waitpid(10664) returned
[echo]	echo finished
[echo]	change g_awaited_process from 10664 to 0
[echo]	cmd: ' echo q = $q'
[echo]	pipe_parse(echo q = $q)
[echo]	cmd[0] = 'echo q = $q'
[echo q = $q]	exec 0 > echo q = $q > 1
[echo q = $q]	restore stdin
[echo q = $q]	redirect: 0->78
[echo q = $q]	restore stdout
[echo q = $q]	redirect: 1->79
[echo q = $q]	redirect: 0->0
[echo q = $q]	redirect: 1->1
[echo q = $q]	after replace
'echo'	'q'	'='	
[echo q = $q]	fork
[echo q = $q]	fork_and_exec:	/bin/echo = 10665 launched
[echo q = $q]	pipe_exec2 returned: 10665
[echo q = $q]	free item: 'echo q = $q' (0x52ea6d0)
[echo q = $q]	waiting echo q = $q to finish
[echo q = $q]	change g_awaited_process from 0 to 10665
[echo q = $q]	wait 10665 to stop
                                                                     [/bin/echo]	close_g_fd_to_close                                                                     [/bin/echo]	close(31)
                                                                     [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                     [/bin/echo]	exec(/bin/echo)
[echo q = $q]	waitpid(10665) returned
[echo q = $q]	echo q = $q finished
[echo q = $q]	change g_awaited_process from 10665 to 0
[echo q = $q]	command processed: 'echo ; echo q = $q'
[echo q = $q]	-------------------------
[echo q = $q]	
[echo q = $q]	
[echo q = $q]	-----------------------
[echo q = $q]	process command: 'env'
[echo q = $q]	quotes replaced: 'env'
[echo q = $q]	trimmed = env
[echo q = $q]	no comments = env
[echo q = $q]	cmd: 'env'
[echo q = $q]	pipe_parse(env)
[echo q = $q]	cmd[0] = 'env'
[env]	exec 0 > env > 1
[env]	restore stdin
[env]	redirect: 0->78
[env]	restore stdout
[env]	redirect: 1->79
[env]	redirect: 0->0
[env]	redirect: 1->1
[env]	after replace
'env'	
[env]	fork
[env]	fork_and_exec:	/usr/bin/env = 10666 launched
[env]	pipe_exec2 returned: 10666
[env]	free item: 'env' (0x52eaf40)
[env]	waiting env to finish
[env]	change g_awaited_process from 0 to 10666
[env]	wait 10666 to stop
                                                                      [/usr/bin/env]	close_g_fd_to_close                                                                      [/usr/bin/env]	close(31)
                                                                      [/usr/bin/env]	fork_and_exec:	about to launch /usr/bin/env
                                                                      [/usr/bin/env]	exec(/usr/bin/env)
[env]	waitpid(10666) returned
[env]	env finished
[env]	change g_awaited_process from 10666 to 0
[env]	command processed: 'env'
[env]	-------------------------
[env]	
[test]	close(1)
[test]	duplicated stdin to 81
[test]	duplicated stdout to 82
[test]	
[test]	-----------------------
[test]	process command: '"setenv"'
[test]	quote replaced: 'setenv' -> '%paired_quote%1'
[test]	quotes replaced: '%paired_quote%1'
[test]	trimmed = %paired_quote%1
[test]	no comments = %paired_quote%1
[test]	cmd: '%paired_quote%1'
[test]	pipe_parse(%paired_quote%1)
[test]	cmd[0] = '%paired_quote%1'
[%paired_quote%1]	exec 0 > %paired_quote%1 > 1
[%paired_quote%1]	restore stdin
[%paired_quote%1]	redirect: 0->81
[%paired_quote%1]	restore stdout
[%paired_quote%1]	redirect: 1->82
[%paired_quote%1]	redirect: 0->0
[%paired_quote%1]	redirect: 1->1
[%paired_quote%1]	after replace
'setenv'	
[%paired_quote%1]	pipe_exec2 returned: 0
[%paired_quote%1]	free item: '%paired_quote%1' (0x52eb710)
[%paired_quote%1]	command processed: '"setenv"'
[%paired_quote%1]	-------------------------
[%paired_quote%1]	
[%paired_quote%1]	
[%paired_quote%1]	-----------------------
[%paired_quote%1]	process command: 'echo ; echo env finished'
[%paired_quote%1]	quotes replaced: 'echo ; echo env finished'
[%paired_quote%1]	trimmed = echo ; echo env finished
[%paired_quote%1]	no comments = echo ; echo env finished
[%paired_quote%1]	cmd: 'echo '
[%paired_quote%1]	pipe_parse(echo)
[%paired_quote%1]	cmd[0] = 'echo'
[echo]	exec 0 > echo > 1
[echo]	restore stdin
[echo]	redirect: 0->81
[echo]	restore stdout
[echo]	redirect: 1->82
[echo]	redirect: 0->0
[echo]	redirect: 1->1
[echo]	after replace
'echo'	
[echo]	fork
[echo]	fork_and_exec:	/bin/echo = 10667 launched
[echo]	pipe_exec2 returned: 10667
[echo]	free item: 'echo' (0x52ebd80)
[echo]	waiting echo to finish
[echo]	change g_awaited_process from 0 to 10667
[echo]	wait 10667 to stop
                                                                       [/bin/echo]	close_g_fd_to_close                                                                       [/bin/echo]	close(31)
                                                                       [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                       [/bin/echo]	exec(/bin/echo)
[echo]	waitpid(10667) returned
[echo]	echo finished
[echo]	change g_awaited_process from 10667 to 0
[echo]	cmd: ' echo env finished'
[echo]	pipe_parse(echo env finished)
[echo]	cmd[0] = 'echo env finished'
[echo env finished]	exec 0 > echo env finished > 1
[echo env finished]	restore stdin
[echo env finished]	redirect: 0->81
[echo env finished]	restore stdout
[echo env finished]	redirect: 1->82
[echo env finished]	redirect: 0->0
[echo env finished]	redirect: 1->1
[echo env finished]	after replace
'echo'	'env'	'finished'	
[echo env finished]	fork
[echo env finished]	fork_and_exec:	/bin/echo = 10668 launched
[echo env finished]	pipe_exec2 returned: 10668
[echo env finished]	free item: 'echo env finished' (0x52ec220)
[echo env finished]	waiting echo env finished to finish
[echo env finished]	change g_awaited_process from 0 to 10668
[echo env finished]	wait 10668 to stop
                                                                        [/bin/echo]	close_g_fd_to_close                                                                        [/bin/echo]	close(31)
                                                                        [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                        [/bin/echo]	exec(/bin/echo)
[echo env finished]	waitpid(10668) returned
[echo env finished]	echo env finished finished
[echo env finished]	change g_awaited_process from 10668 to 0
[echo env finished]	command processed: 'echo ; echo env finished'
[echo env finished]	-------------------------
[echo env finished]	
[echo env finished]	
[echo env finished]	-----------------------
[echo env finished]	process command: 'setenv q w'
[echo env finished]	quotes replaced: 'setenv q w'
[echo env finished]	trimmed = setenv q w
[echo env finished]	no comments = setenv q w
[echo env finished]	cmd: 'setenv q w'
[echo env finished]	pipe_parse(setenv q w)
[echo env finished]	cmd[0] = 'setenv q w'
[setenv q w]	exec 0 > setenv q w > 1
[setenv q w]	restore stdin
[setenv q w]	redirect: 0->81
[setenv q w]	restore stdout
[setenv q w]	redirect: 1->82
[setenv q w]	redirect: 0->0
[setenv q w]	redirect: 1->1
[setenv q w]	after replace
'setenv'	'q'	'w'	
[setenv q w]	pipe_exec2 returned: 0
[setenv q w]	free item: 'setenv q w' (0x52eca60)
[setenv q w]	command processed: 'setenv q w'
[setenv q w]	-------------------------
[setenv q w]	
[setenv q w]	
[setenv q w]	-----------------------
[setenv q w]	process command: 'echo ; echo q = $q'
[setenv q w]	quotes replaced: 'echo ; echo q = $q'
[setenv q w]	trimmed = echo ; echo q = $q
[setenv q w]	no comments = echo ; echo q = $q
[setenv q w]	cmd: 'echo '
[setenv q w]	pipe_parse(echo)
[setenv q w]	cmd[0] = 'echo'
[echo]	exec 0 > echo > 1
[echo]	restore stdin
[echo]	redirect: 0->81
[echo]	restore stdout
[echo]	redirect: 1->82
[echo]	redirect: 0->0
[echo]	redirect: 1->1
[echo]	after replace
'echo'	
[echo]	fork
[echo]	fork_and_exec:	/bin/echo = 10669 launched
[echo]	pipe_exec2 returned: 10669
[echo]	free item: 'echo' (0x52ee890)
[echo]	waiting echo to finish
[echo]	change g_awaited_process from 0 to 10669
[echo]	wait 10669 to stop
                                                                         [/bin/echo]	close_g_fd_to_close                                                                         [/bin/echo]	close(31)
                                                                         [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                         [/bin/echo]	exec(/bin/echo)
[echo]	waitpid(10669) returned
[echo]	echo finished
[echo]	change g_awaited_process from 10669 to 0
[echo]	cmd: ' echo q = $q'
[echo]	pipe_parse(echo q = $q)
[echo]	cmd[0] = 'echo q = $q'
[echo q = $q]	exec 0 > echo q = $q > 1
[echo q = $q]	restore stdin
[echo q = $q]	redirect: 0->81
[echo q = $q]	restore stdout
[echo q = $q]	redirect: 1->82
[echo q = $q]	redirect: 0->0
[echo q = $q]	redirect: 1->1
[echo q = $q]	after replace
'echo'	'q'	'='	'w'	
[echo q = $q]	fork
[echo q = $q]	fork_and_exec:	/bin/echo = 10670 launched
[echo q = $q]	pipe_exec2 returned: 10670
[echo q = $q]	free item: 'echo q = $q' (0x52eed10)
[echo q = $q]	waiting echo q = $q to finish
[echo q = $q]	change g_awaited_process from 0 to 10670
[echo q = $q]	wait 10670 to stop
                                                                          [/bin/echo]	close_g_fd_to_close                                                                          [/bin/echo]	close(31)
                                                                          [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                          [/bin/echo]	exec(/bin/echo)
[echo q = $q]	waitpid(10670) returned
[echo q = $q]	echo q = $q finished
[echo q = $q]	change g_awaited_process from 10670 to 0
[echo q = $q]	command processed: 'echo ; echo q = $q'
[echo q = $q]	-------------------------
[echo q = $q]	
[echo q = $q]	
[echo q = $q]	-----------------------
[echo q = $q]	process command: 'env'
[echo q = $q]	quotes replaced: 'env'
[echo q = $q]	trimmed = env
[echo q = $q]	no comments = env
[echo q = $q]	cmd: 'env'
[echo q = $q]	pipe_parse(env)
[echo q = $q]	cmd[0] = 'env'
[env]	exec 0 > env > 1
[env]	restore stdin
[env]	redirect: 0->81
[env]	restore stdout
[env]	redirect: 1->82
[env]	redirect: 0->0
[env]	redirect: 1->1
[env]	after replace
'env'	
[env]	fork
[env]	fork_and_exec:	/usr/bin/env = 10671 launched
[env]	pipe_exec2 returned: 10671
[env]	free item: 'env' (0x52ef620)
[env]	waiting env to finish
[env]	change g_awaited_process from 0 to 10671
[env]	wait 10671 to stop
                                                                           [/usr/bin/env]	close_g_fd_to_close                                                                           [/usr/bin/env]	close(31)
                                                                           [/usr/bin/env]	fork_and_exec:	about to launch /usr/bin/env
                                                                           [/usr/bin/env]	exec(/usr/bin/env)
[env]	waitpid(10671) returned
[env]	env finished
[env]	change g_awaited_process from 10671 to 0
[env]	command processed: 'env'
[env]	-------------------------
[env]	
[env]	
[env]	-----------------------
[env]	process command: 'unsetenv q'
[env]	quotes replaced: 'unsetenv q'
[env]	trimmed = unsetenv q
[env]	no comments = unsetenv q
[env]	cmd: 'unsetenv q'
[env]	pipe_parse(unsetenv q)
[env]	cmd[0] = 'unsetenv q'
[unsetenv q]	exec 0 > unsetenv q > 1
[unsetenv q]	restore stdin
[unsetenv q]	redirect: 0->81
[unsetenv q]	restore stdout
[unsetenv q]	redirect: 1->82
[unsetenv q]	redirect: 0->0
[unsetenv q]	redirect: 1->1
[unsetenv q]	after replace
'unsetenv'	'q'	
[unsetenv q]	pipe_exec2 returned: 0
[unsetenv q]	free item: 'unsetenv q' (0x52efc40)
[unsetenv q]	command processed: 'unsetenv q'
[unsetenv q]	-------------------------
[unsetenv q]	
[unsetenv q]	
[unsetenv q]	-----------------------
[unsetenv q]	process command: 'echo ; echo q = $q'
[unsetenv q]	quotes replaced: 'echo ; echo q = $q'
[unsetenv q]	trimmed = echo ; echo q = $q
[unsetenv q]	no comments = echo ; echo q = $q
[unsetenv q]	cmd: 'echo '
[unsetenv q]	pipe_parse(echo)
[unsetenv q]	cmd[0] = 'echo'
[echo]	exec 0 > echo > 1
[echo]	restore stdin
[echo]	redirect: 0->81
[echo]	restore stdout
[echo]	redirect: 1->82
[echo]	redirect: 0->0
[echo]	redirect: 1->1
[echo]	after replace
'echo'	
[echo]	fork
[echo]	fork_and_exec:	/bin/echo = 10672 launched
[echo]	pipe_exec2 returned: 10672
[echo]	free item: 'echo' (0x52f0aa0)
[echo]	waiting echo to finish
[echo]	change g_awaited_process from 0 to 10672
[echo]	wait 10672 to stop
                                                                            [/bin/echo]	close_g_fd_to_close                                                                            [/bin/echo]	close(31)
                                                                            [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                            [/bin/echo]	exec(/bin/echo)
[echo]	waitpid(10672) returned
[echo]	echo finished
[echo]	change g_awaited_process from 10672 to 0
[echo]	cmd: ' echo q = $q'
[echo]	pipe_parse(echo q = $q)
[echo]	cmd[0] = 'echo q = $q'
[echo q = $q]	exec 0 > echo q = $q > 1
[echo q = $q]	restore stdin
[echo q = $q]	redirect: 0->81
[echo q = $q]	restore stdout
[echo q = $q]	redirect: 1->82
[echo q = $q]	redirect: 0->0
[echo q = $q]	redirect: 1->1
[echo q = $q]	after replace
'echo'	'q'	'='	
[echo q = $q]	fork
[echo q = $q]	fork_and_exec:	/bin/echo = 10673 launched
[echo q = $q]	pipe_exec2 returned: 10673
[echo q = $q]	free item: 'echo q = $q' (0x52f0f20)
[echo q = $q]	waiting echo q = $q to finish
[echo q = $q]	change g_awaited_process from 0 to 10673
[echo q = $q]	wait 10673 to stop
                                                                             [/bin/echo]	close_g_fd_to_close                                                                             [/bin/echo]	close(31)
                                                                             [/bin/echo]	fork_and_exec:	about to launch /bin/echo
                                                                             [/bin/echo]	exec(/bin/echo)
[echo q = $q]	waitpid(10673) returned
[echo q = $q]	echo q = $q finished
[echo q = $q]	change g_awaited_process from 10673 to 0
[echo q = $q]	command processed: 'echo ; echo q = $q'
[echo q = $q]	-------------------------
[echo q = $q]	
[echo q = $q]	
[echo q = $q]	-----------------------
[echo q = $q]	process command: 'env'
[echo q = $q]	quotes replaced: 'env'
[echo q = $q]	trimmed = env
[echo q = $q]	no comments = env
[echo q = $q]	cmd: 'env'
[echo q = $q]	pipe_parse(env)
[echo q = $q]	cmd[0] = 'env'
[env]	exec 0 > env > 1
[env]	restore stdin
[env]	redirect: 0->81
[env]	restore stdout
[env]	redirect: 1->82
[env]	redirect: 0->0
[env]	redirect: 1->1
[env]	after replace
'env'	
[env]	fork
[env]	fork_and_exec:	/usr/bin/env = 10674 launched
[env]	pipe_exec2 returned: 10674
[env]	free item: 'env' (0x52f1790)
[env]	waiting env to finish
[env]	change g_awaited_process from 0 to 10674
[env]	wait 10674 to stop
                                                                              [/usr/bin/env]	close_g_fd_to_close                                                                              [/usr/bin/env]	close(31)
                                                                              [/usr/bin/env]	fork_and_exec:	about to launch /usr/bin/env
                                                                              [/usr/bin/env]	exec(/usr/bin/env)
[env]	waitpid(10674) returned
[env]	env finished
[env]	change g_awaited_process from 10674 to 0
[env]	command processed: 'env'
[env]	-------------------------
[env]	
[test]	close(1)
[test]	
[test]	-----------------------
[test]	process command: 'setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so'
[test]	quotes replaced: 'setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so'
[test]	trimmed = setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
[test]	no comments = setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
[test]	cmd: 'setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so'
[test]	pipe_parse(setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
[test]	cmd[0] = 'setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so'
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	exec 0 > setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so > 1
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	restore stdin
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	redirect: 0->81
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	restore stdout
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	redirect: 1->82
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	redirect: 0->0
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	redirect: 1->1
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	after replace
'setenv'	'LD_PRELOAD'	'/usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so'	
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	pipe_exec2 returned: 0
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	free item: 'setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so' (0x52f7bf0)
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	command processed: 'setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so'
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	-------------------------
[setenv LD_PRELOAD /usr/lib/valgrind/vgpreload_core-amd64-linux.so:/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so]	
[tests]	exit process (0)
[tests]	free item: '1' (0x528b5c0)
